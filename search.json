[{"path":"https://bcgov.github.io/climr/articles/climr_with_rasters.html","id":"spatial-inputs-and-downscale","dir":"Articles","previous_headings":"","what":"Spatial inputs and downscale()","title":"Working with rasters and other spatial objects","text":"often start spatial object study area (raster vector format) point locations want obtain downscaled climate variables. Bellow show work spatial objects downscale().","code":""},{"path":"https://bcgov.github.io/climr/articles/climr_with_rasters.html","id":"raster-inputs","dir":"Articles","previous_headings":"Spatial inputs and downscale()","what":"Raster inputs","title":"Working with rasters and other spatial objects","text":"Often raster interest study area want full coverage downscaled climate variables. Since downscale() accepts table point locations, need convert raster table cell coordinates, elevation (‘elev’) information unique point IDs.","code":""},{"path":"https://bcgov.github.io/climr/articles/climr_with_rasters.html","id":"raster-with-elevation-values-a-dem","dir":"Articles","previous_headings":"Spatial inputs and downscale() > Raster inputs","what":"Raster with elevation values (a DEM)","title":"Working with rasters and other spatial objects","text":"raster DEM, points SpatVector inherits elevation cell values. DEM use 0 elevation values ocean areas. Since climr meant used downscale climate variables land, “clip” (set values outside polygon NAs) raster using land-polygon. Digital Elevation Model North Vancouver w/ w/o values outside polygon area making table raster cell (centroid) coordinates must preserve cell IDs (.data.frame(..., cell = TRUE)) can later convert clirm_downscale() outputs back raster format. Note cells NA’s automagically excluded. can now pass table cell locations downscale(): convert outputs back raster format, simply need use original raster use extract point locations template make rasters downscaled climate values. Since location ids match raster cell IDs, dwscl_out$id column used index raster cells climate values assigning downscaled MAT values. downscale() outputs converted raster layers","code":"library(climr) library(terra) library(data.table)  dem_vancouver <- get(data(\"dem_vancouver\")) |>   unwrap()  vancouver_poly <- get(data(\"vancouver_poly\")) |>   unwrap()  dem_vancouver <- mask(dem_vancouver, vancouver_poly) ## xy = TRUE ensures we get cell (centroid) coordinates ## cell = TRUE ensures we get cell ID numbers, which will be the point location IDs. xyzDT <- dem_vancouver |>   as.data.frame(., xy = TRUE, cell = TRUE) |>   as.data.table()  ## rename colums to climr standard setnames(xyzDT, c(\"id\", \"lon\", \"lat\", \"elev\")) xyzDT #>            id       lon      lat      elev #>         <num>     <num>    <num>     <num> #>     1:     62 -123.2486 49.49944  16.22222 #>     2:     63 -123.2478 49.49944  39.88889 #>     3:     64 -123.2469 49.49944  81.22222 #>     4:     65 -123.2461 49.49944 139.11111 #>     5:     66 -123.2453 49.49944 179.77777 #>    ---                                     #> 94025: 115196 -122.9036 49.30028 112.44444 #> 94026: 115197 -122.9028 49.30028 116.44444 #> 94027: 115198 -122.9019 49.30028 128.00000 #> 94028: 115199 -122.9011 49.30028 133.33333 #> 94029: 115200 -122.9003 49.30028 136.88889 ## in this case there's really no need for a spatial output format dwscl_out <- downscale(xyzDT,   which_refmap = \"auto\",   gcms = list_gcms()[1],   ssps = list_ssps()[1],   gcm_periods = list_gcm_periods(),   max_run = 0L, return_refperiod = FALSE,   vars = \"MAT\", out_spatial = FALSE ) tempRas <- rast(dem_vancouver)  dwscl_Ras <- sapply(split(dwscl_out, by = c(\"GCM\", \"PERIOD\")), function(DT, tempRas) {   tempRas[DT$id] <- DT$MAT   return(tempRas) }, tempRas = tempRas)  ## make a stack dwscl_Ras <- rast(dwscl_Ras)  dwscl_Ras #> class       : SpatRaster  #> dimensions  : 240, 480, 5  (nrow, ncol, nlyr) #> resolution  : 0.0008333333, 0.0008333333  (x, y) #> extent      : -123.2999, -122.8999, 49.29986, 49.49986  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> names       : ACCESS~1_2020, ACCESS~1_2040, ACCESS~1_2060, ACCESS~1_2080, ACCESS~1_2100  #> min values  :      3.011241,      4.083216,      4.864598,      5.315447,      5.305784  #> max values  :     11.770973,     12.841200,     13.613663,     14.062831,     14.053918"},{"path":"https://bcgov.github.io/climr/articles/climr_with_rasters.html","id":"raster-without-elevation-values","dir":"Articles","previous_headings":"Spatial inputs and downscale() > Raster inputs","what":"Raster without elevation values","title":"Working with rasters and other spatial objects","text":"raster DEM, need obtain elevation points extracted raster cells. can done extracting elevation values DEM raster first raster’s cell centroid coordinates. DEM’s resolution doesn’t need match first raster’s resolution. start raster biogeoclimatc zones North Vancouver use lower resolution DEM obtain elevation values. , clip land areas. Rasters used derive point locations (left) elevation values (right). process convert downscaled data raster format , used raster cell IDs point location IDs (xyzDT$id):","code":"## get point locations from raster of interest BECz_vancouver_ras <- get(data(\"BECz_vancouver_ras\")) |>   unwrap()  BECz_vancouver_ras <- mask(BECz_vancouver_ras, vancouver_poly)  ## raster to data.table and rename columns to climr standard xyzDT <- BECz_vancouver_ras |>   as.data.frame(., xy = TRUE, cell = TRUE) |>   as.data.table() setnames(xyzDT, c(\"id\", \"lon\", \"lat\", \"ZONE\"))  ## now extract elevation values at each cell centroid coordinate ## from a DEM raster dem_vancouver_lowres <- get(data(dem_vancouver_lowres)) |>   unwrap()  xyzDT$elev <- extract(dem_vancouver_lowres, xyzDT[, .(lon, lat)])[names(dem_vancouver_lowres)] par(mfrow = c(1, 2)) plot(BECz_vancouver_ras, main = \"BGC zones N Vancouver\") plot(dem_vancouver_lowres,   main = \"Low res. DEM\",   col = hcl.colors(100, \"Earth\") ) par(mfrow = c(1, 1)) dwscl_out <- downscale(xyzDT,   which_refmap = \"auto\",   gcms = list_gcms()[1],   ssps = list_ssps()[1],   gcm_periods = list_gcm_periods(),   max_run = 0L, return_refperiod = FALSE,   vars = \"MAT\", out_spatial = FALSE )  tempRas <- rast(BECz_vancouver_ras)  dwscl_Ras <- sapply(split(dwscl_out, by = c(\"GCM\", \"PERIOD\")), function(DT, tempRas) {   tempRas[DT$id] <- DT$MAT   return(tempRas) }, tempRas = tempRas)  ## make a stack dwscl_Ras <- rast(dwscl_Ras)"},{"path":"https://bcgov.github.io/climr/articles/climr_with_rasters.html","id":"lowering-an-input-raster-resolution","dir":"Articles","previous_headings":"Spatial inputs and downscale() > Raster inputs","what":"Lowering an input raster resolution","title":"Working with rasters and other spatial objects","text":"may want downscale climate coarser resolution , e.g., DEM raster layer hand: Points extracted raster , pass data.table point locations downscale: Plot spatial outputs downscale() using spaced point locations","code":"vancouver_poly <- get(data(\"vancouver_poly\")) |>   unwrap() dem_vancouver <- get(data(\"dem_vancouver\")) |>   unwrap()  dem_vancouver <- mask(dem_vancouver, vancouver_poly)  ## extract points at a coarser scale, but elevation at original scale lowRes_ras <- rast(dem_vancouver) lowRes_ras <- project(lowRes_ras, crs(lowRes_ras), res = 0.01)  lowRes_ras[] <- 1 lowRes_ras <- mask(lowRes_ras, vancouver_poly) ## set water back to NA  lowRes_points <- as.points(lowRes_ras) lowRes_points$id <- 1:nrow(lowRes_points)  xyzDT <- extract(dem_vancouver, lowRes_points, xy = TRUE) |>   as.data.table() setnames(xyzDT, c(\"id\", \"elev\", \"lon\", \"lat\"))  ## exclude NAs xyzDT <- xyzDT[complete.cases(xyzDT)] lowRes_points <- lowRes_points[lowRes_points$id %in% xyzDT$id, ] dwscl_out <- downscale(xyzDT,   which_refmap = \"auto\",   gcms = list_gcms()[1],   ssps = list_ssps()[1],   gcm_periods = list_gcm_periods(),   max_run = 0L, return_refperiod = FALSE,   vars = \"MAT\", out_spatial = TRUE )"},{"path":[]},{"path":"https://bcgov.github.io/climr/articles/climr_with_rasters.html","id":"point-vector-data","dir":"Articles","previous_headings":"Spatial inputs and downscale() > Vector inputs/outputs","what":"Point vector data","title":"Working with rasters and other spatial objects","text":"process similar . points elevation information simply need convert data.table. case, point IDs need added data.table afterwards. don’t elevation information, need obtain . example start set points North Vancouver, BC, Canada, get elevation values Digital Elevation Model (DEM) raster. terra::extract() function outputs data.frame point IDs, extracted values , optionally x/y coordinates. need simply use output create xyzDT table downscale(). get point-type outputs simply set downscale(..., out_spatial = TRUE). Plot spatial outputs downscale()","code":"vancouver_points <- get(data(\"vancouver_points\")) |>   unwrap() dem_vancouver <- get(data(\"dem_vancouver\")) |>   unwrap()  xyzDT <- extract(dem_vancouver, vancouver_points, xy = TRUE) |>   as.data.table() setnames(xyzDT, c(\"id\", \"elev\", \"lon\", \"lat\"))  dwscl_out <- downscale(xyzDT,   which_refmap = \"auto\",   gcms = list_gcms()[1],   ssp = list_ssps()[1],   gcm_periods = list_gcm_periods(),   vars = \"MAT\", max_run = 0L,   return_refperiod = FALSE,   out_spatial = TRUE ) dwscl_out #>  class       : SpatVector  #>  geometry    : points  #>  dimensions  : 5000, 7  (geometries, attributes) #>  extent      : -123.2828, -122.9003, 49.30028, 49.49944  (xmin, xmax, ymin, ymax) #>  coord. ref. : +proj=longlat +datum=WGS84 +no_defs  #>  names       :  elev    id           GCM    SSP          RUN    PERIOD   MAT #>  type        : <num> <num>         <chr>  <chr>        <chr>     <chr> <num> #>  values      : 233.1     1 ACCESS-ESM1-5 ssp126 ensembleMean 2001_2020 10.32 #>                233.1     1 ACCESS-ESM1-5 ssp126 ensembleMean 2021_2040 11.39 #>                233.1     1 ACCESS-ESM1-5 ssp126 ensembleMean 2041_2060 12.16"},{"path":"https://bcgov.github.io/climr/articles/climr_with_rasters.html","id":"polygon-vector-data","dir":"Articles","previous_headings":"Spatial inputs and downscale()","what":"Polygon vector data","title":"Working with rasters and other spatial objects","text":"assume polygon data refers area (several) want downscaled climate variables . polygon associated single value per attribute field, polygons need sampled/combined points downscaling happen. examples showed use polygon mask raster points dataset creating xyzDT table, way achieve . , show another example points derived polygon centroids.","code":""},{"path":"https://bcgov.github.io/climr/articles/climr_with_rasters.html","id":"using-polygon-centroids","dir":"Articles","previous_headings":"Spatial inputs and downscale() > Polygon vector data","what":"using polygon centroids","title":"Working with rasters and other spatial objects","text":"advise unless polygons small centroid reflects overall polygon’s climate conditions. Excluded (grey) retained (blue) polygon centroids","code":"vancouver_poly <- get(data(\"vancouver_poly\")) |>   unwrap() dem_vancouver <- get(data(\"dem_vancouver\")) |>   unwrap()  centrds <- centroids(vancouver_poly, inside = TRUE)  ## get polygon areas and exclude very large polygon centroids centrds$area <- expanse(vancouver_poly) centrds <- centrds[centrds$area < 50000, ]  ## we retained only 3 points  xyzDT <- extract(dem_vancouver, centrds, xy = TRUE) |>   as.data.table() setnames(xyzDT, c(\"id\", \"elev\", \"lon\", \"lat\"))  dwscl_outGrid <- downscale(xyzDT,   which_refmap = \"auto\",   gcms = list_gcms()[1],   ssp = list_ssps()[1],   gcm_periods = list_gcm_periods(),   max_run = 0L, return_refperiod = FALSE,   vars = \"MAT\", out_spatial = TRUE )"},{"path":[]},{"path":"https://bcgov.github.io/climr/articles/climr_workflow_beg.html","id":"using-the-downscale-function","dir":"Articles","previous_headings":"","what":"Using the downscale() function","title":"Beginner `climr` workflow","text":"basic use climr pass data.table point coordinates, IDs elevation downscale() select type climate projection values wanted - e.g. ask future projections two periods, using two emissions scenarios two General Circulation Models. also specify want 3 individual runs model/scenario combination, addition ensemble mean (returned default). resulting output data.table, printed : ‘ds_out’ table - Output downscale. Outputs shown one location (‘id’)","code":"library(climr)  ## provide a data.frame or data.table of point coordinates, IDs and elevation my_points <- data.frame(   lon = c(-123.4404, -123.5064, -124.2317),   lat = c(48.52631, 48.46807, 49.21999),   elev = c(52, 103, 357),   id = LETTERS[1:3] )  ## climr query for the data.frame ds_out <- downscale(   xyz = my_points, which_refmap = \"auto\",   gcms = c(\"GFDL-ESM4\", \"EC-Earth3\"), # specify two global climate models   ssps = c(\"ssp370\", \"ssp245\"), # specify two greenhouse gas concentration scenarios   gcm_periods = c(\"2001_2020\", \"2041_2060\"), # specify two 20-year periods   max_run = 3, # specify 3 individual runs for each model   vars = c(\"PPT\", \"CMD\", \"CMI\") ) #> ..."},{"path":"https://bcgov.github.io/climr/articles/climr_workflow_beg.html","id":"listing-available-options","dir":"Articles","previous_headings":"","what":"Listing available options","title":"Beginner `climr` workflow","text":"list_* functions (see ?list_gcm) useful see available options, example: functions can used arguments downscale(). example, vars = list_variables() specified obtain data available variables, gcms = list_gcm()[c(1,4,5,6,7,10,11,12)] used specify eight-gcm ensemble recommended Mahony et al. (2022).","code":"list_gcms() #>  [1] \"ACCESS-ESM1-5\" \"BCC-CSM2-MR\"   \"CanESM5\"       \"CNRM-ESM2-1\"   #>  [5] \"EC-Earth3\"     \"GFDL-ESM4\"     \"GISS-E2-1-G\"   \"INM-CM5-0\"     #>  [9] \"IPSL-CM6A-LR\"  \"MIROC6\"        \"MPI-ESM1-2-HR\" \"MRI-ESM2-0\"    #> [13] \"UKESM1-0-LL\" list_gcm_periods() #> [1] \"2001_2020\" \"2021_2040\" \"2041_2060\" \"2061_2080\" \"2081_2100\" list_ssps() #> [1] \"ssp126\" \"ssp245\" \"ssp370\" \"ssp585\""},{"path":"https://bcgov.github.io/climr/articles/climr_workflow_beg.html","id":"working-with-raster-data","dir":"Articles","previous_headings":"","what":"Working with raster data","title":"Beginner `climr` workflow","text":"common use climr obtain climate data user-provided raster grid. sample code showing . convert digital elevation model (DEM) table points (one per grid cell) use climr input table. take climr input populate raster grid climate variable.  See vignette(\"vignettes/climr_with_rasters.Rmd\") details using climr rasters spatial data.","code":"library(terra) library(data.table)  ## get the sample digital elevation model (dem) provided with `climr` dem_vancouver <- get(data(\"dem_vancouver\")) |>    unwrap()  ## convert the DEM to a data.frame my_grid <- as.data.frame(dem_vancouver, cells = TRUE, xy = TRUE) colnames(my_grid) <- c(\"id\", \"lon\", \"lat\", \"elev\") # rename column names to what climr expects  ## A simple climr query. This will return the observed 1961-1990 and 2001-2020 mean annual temperature (MAT) for the raster grid points.  ds_out <- downscale(   xyz = my_grid,    obs_periods = \"2001_2020\",    vars = c(\"MAT\") ) #> .. ## populate the raster grid with the downscaled climate values my_clim <- rast(dem_vancouver) # use the DEM as a template raster my_clim[ds_out[PERIOD == \"2001_2020\", id]] <- ds_out[PERIOD == \"2001_2020\", MAT] # populate the raster cells with the 2001-2020 mean annual temperature (MAT) values, using the `id` field as the link.   plot(my_clim, main = \"2001-2020 mean annual temperature (MAT)\")"},{"path":"https://bcgov.github.io/climr/articles/climr_workflow_beg.html","id":"looking-under-the-hood","dir":"Articles","previous_headings":"","what":"Looking under the hood","title":"Beginner `climr` workflow","text":"can download investigate raw data climr uses downscaling, reference climatological maps, observational time series, GCM anomalies. See section “Workflow *_input functions downscale” vignette(\"vignettes/climr_workflow_int.Rmd\") example.","code":""},{"path":"https://bcgov.github.io/climr/articles/climr_workflow_int.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Intermediate `climr` workflow","text":"climr essence similar ClimateNA downscales low-resolution (~100km) global climate model anomalies high-resolution (1-4km) maps climate, elevation adjustment user-specified elevation grids/points based empirical lapse rates (local relationship climate elevation) 1-4km climate maps. elevation-adjusted monthly values basic climate elements (temperature precipitation) used estimate derived variables (e.g., degree-days, precipitation snow) based published equations parameters (Wang et al. 2016). See vignette(\"methods_downscaling.Rmd\") detailed explanation downscaling methodology employed climr. climr’s strenghts : ability obtain multiple, individual runs (several) General Circulation Model(s) (GCM), well ensemble cross-run mean, cloud-based raw data access local data caching, direct R interface downscaled climate elements derived variables covering western Canada western US. vignette cover two basic climr workflows obtain historic future climate projections derived variables. first, less code-heavy, workflow uses downscale() much heavy lifting – [Workflow downscale]. second workflow step--step breakdown downscale() using functions downscale() calls internally – [Workflow *_input functions downscale].","code":""},{"path":"https://bcgov.github.io/climr/articles/climr_workflow_int.html","id":"main-functions","dir":"Articles","previous_headings":"","what":"Main functions","title":"Intermediate `climr` workflow","text":"list main functions used two workflows. downscale() takes data.table point coordinates (lat-long projection), obtains climate normals historic /future projections covering extent points, downscaled using point elevation data used calculate derived climate variables point locations. outputs downscaled derived variables form data.table SpatVector points. input_refmap() downloads prepares high-resolution climate normals. Called internally downscale(). input_obs() input_obs_ts() download prepare low-resolution historic climate elements given historic period time series, respectively. Called internally downscale(). input_gcms(), input_gcm_hist() input_gcm_ssp() download prepare low-resolution climate element projections future period, historic period future time series, respectively. Called internally downscale(). downscale() downscales historic future climate elements calculates derived climate variables. Called downscale().","code":""},{"path":"https://bcgov.github.io/climr/articles/climr_workflow_int.html","id":"workflow-with-downscale","dir":"Articles","previous_headings":"","what":"Workflow with downscale","title":"Intermediate `climr` workflow","text":"example workflow use downscale() calculate mean annual temperature (MAT), total annual precipitation (PPT) precipitation snow (PAS) weather stations associated Adjusted homogenized Canadian climate data. downscale MAT, PPT MAS locations historic future period, using two separate runs GCM one emissions scenario. begin loading Adjusted Precipitation Canada (APC2) dataset clipping North Vancouver area. dataset already contains elevation information. Note longitude (‘lon’) latitude (‘lat’) must lat-long projection (EPSG:4326) elevation m. Point IDs must unique – use weather station IDs. also add two columns data.table (‘ZONE’ ‘HEZ’) ignored downscale(). downscale() preserves IDs use join back extra columns used plotting later . Weather stations North Vancouver list_*() functions provide list available historic future periods, GCMs, emissions scenarios, derived variables (case annual ones). chose available historic period (2001-2020), 2021-2040 future period, ‘EC-Earth3’ GCM SSP 2.45 scenario. MAT, PPT PAS selected output variables. pass choices downscale(), choosing “auto” normals option (defaults using highest resolution data available points selected). Note data historical periods doesn’t GCM SSP value – expected , GCMs SSPs used project future climate values. Also, future projections obtained two runs EC-Earth3 (‘r1i1p1f1’ ‘r10i1p1f1’), plus ensemble mean. ‘ds_out’ table - Output downscale. Outputs show one location (‘id’) add back extra columns need simple left join. can now simple visualisation climate variation biogeoclimatic zone (‘ZONE’), normals period 1961-1990:  may also want yearly climate projections. case, want yearly values MAT PPT 2001-2015 2021:2040, using GCM, SSP number model runs. Notice data doesn’t need downloaded , retrieved cache. downscale() internally rescales projected historical values align observed counterpart. See vignette(\"methods_downscaling.Rmd\") details. plot time series, filter data single model run (.e. case discard ensemble means) single point location. Note plot observed (obs_hist) projected historical (proj_hist) climate values along future climate projections (proj_fut). Time series outputs downscale. Pannels show mean annual temperature (MAT), total annual precipitation (PPT) precipitation snow (PAS). Line colours refer observed historic values (grey), projected historic values (gren) future projected values (blue) single location, GCM, emissions scenario model run.","code":"library(climr) library(data.table) library(terra)  ## weather station locations weather_stations <- get(data(\"weather_stations\")) |>   unwrap()  ## study area of interest (North Vancouver) vancouver_poly <- get(data(\"vancouver_poly\")) |>   unwrap()  ## subset to points in study area weather_stations <- mask(weather_stations, vancouver_poly)  ## convert to data.table and subset/rename columns needed by climr xyzDT <- as.data.table(weather_stations, geom = \"XY\") cols <- c(\"Station ID\", \"x\", \"y\", \"Elevation (m)\") xyzDT <- xyzDT[, ..cols] setnames(xyzDT, c(\"id\", \"lon\", \"lat\", \"elev\"))  ## join BEC zones and colours BECz_vancouver <- get(data(\"BECz_vancouver\")) |>   unwrap()  BECz_points <- extract(BECz_vancouver, weather_stations) |>   as.data.table() BECz_points <- BECz_points[, .(ZONE, HEX)]  xyzDT <- cbind(xyzDT, BECz_points)  ## remove duplicates xyzDT <- unique(xyzDT)  ## there are some duplicate stations with slightly different ## coordinates. We'll take the first xyzDT <- xyzDT[!duplicated(id)] list_obs_periods() #> [1] \"2001_2020\" list_gcm_periods() #> [1] \"2001_2020\" \"2021_2040\" \"2041_2060\" \"2061_2080\" \"2081_2100\" list_gcms() #>  [1] \"ACCESS-ESM1-5\" \"BCC-CSM2-MR\"   \"CanESM5\"       \"CNRM-ESM2-1\"   #>  [5] \"EC-Earth3\"     \"GFDL-ESM4\"     \"GISS-E2-1-G\"   \"INM-CM5-0\"     #>  [9] \"IPSL-CM6A-LR\"  \"MIROC6\"        \"MPI-ESM1-2-HR\" \"MRI-ESM2-0\"    #> [13] \"UKESM1-0-LL\" list_ssps() #> [1] \"ssp126\" \"ssp245\" \"ssp370\" \"ssp585\" list_vars(set = \"Annual\") #>  [1] \"AHM\"     \"bFFP\"    \"CMD\"     \"CMI\"     \"DD18\"    \"DD5\"     \"DDsub0\"  #>  [8] \"DDsub18\" \"eFFP\"    \"EMT\"     \"Eref\"    \"EXT\"     \"FFP\"     \"MAP\"     #> [15] \"MAT\"     \"MCMT\"    \"MSP\"     \"MWMT\"    \"NFFD\"    \"PAS\"     \"PPT\"     #> [22] \"RH\"      \"SHM\"     \"Tave\"    \"TD\"      \"Tmax\"    \"Tmin\" ds_out <- downscale(   xyz = xyzDT,   which_refmap = \"auto\",   obs_periods = \"2001_2020\",   gcm_periods = \"2021_2040\",   gcms = \"EC-Earth3\",   ssps = \"ssp245\",   max_run = 2,   return_refperiod = TRUE, ## to return the 1961-1990 normals period   vars = c(\"MAT\", \"PPT\", \"PAS\") ) #> Welcome to climr! #> Getting normals... #> Downloading new data... #> . #> Caching data... #> Getting observed anomalies... #> Downloading observed period anomalies #> . #> Caching data... #> Getting GCMs... #> Downloading GCM anomalies #> . #> Caching data... #> Downscaling!! ds_out <- xyzDT[, .(id, ZONE, HEX)][ds_out, on = .(id)] plotdata <- melt(ds_out, measure.vars = c(\"MAT\", \"PPT\", \"PAS\")) cols <- plotdata$HEX names(cols) <- plotdata$ZONE cols <- cols[!duplicated(cols)]  ggplot(plotdata[PERIOD == \"1961_1990\"], aes(x = ZONE, y = value, fill = ZONE)) +   geom_boxplot() +   theme_light() +   scale_fill_manual(values = cols) +   facet_wrap(~variable, scales = \"free\") ds_out_ts <- downscale(   xyz = xyzDT,   which_refmap = \"auto\",   obs_years = 2001:2015, ## currently up to 2015   gcm_hist_years = 2001:2020, ## currently up to 2010   gcm_ssp_years = 2021:2040, ## currently starting at 2021   gcms = \"EC-Earth3\",   ssps = \"ssp245\",   max_run = 1,   return_refperiod = TRUE, ## to return the 1961-1990 normals period   vars = c(\"MAT\", \"PPT\", \"PAS\") ) #> Welcome to climr! #> Getting normals... #> Retrieving from cache... #> Downloading GCM anomalies #> Precip... #> . #> Tmax... #> . #> Tmin... #> . #> Caching data... #> Downloading GCM anomalies #> . #> Caching data... #> Downscaling!! ds_out_ts[is.na(GCM), GCM := \"Historic\"] ds_out_ts <- ds_out_ts[!grepl(\"ensemble\", RUN)] ds_out_ts <- ds_out_ts[!grepl(\"1961_1990\", PERIOD)]  plotdata <- melt(ds_out_ts, measure.vars = c(\"MAT\", \"PPT\", \"PAS\")) plotdata[, PERIOD := as.numeric(PERIOD)] plotdata <- plotdata[id == head(id, 1)]  ## time series period groupings plotdata[GCM == \"Historic\", pgrp := \"obs_hist\"] plotdata[GCM != \"Historic\" & PERIOD <= 2020, pgrp := \"proj_hist\"] plotdata[GCM != \"Historic\" & PERIOD > 2020, pgrp := \"proj_fut\"]  ## make groups so that missing data is not shown as a \"line connection\" groups <- data.table(PERIOD = unique(plotdata$PERIOD)) groups[, idx := c(1, diff(PERIOD))] i2 <- c(1, which(groups$idx != 1), nrow(groups) + 1) groups[, grp := rep(1:length(diff(i2)), diff(i2))] plotdata <- groups[, .(PERIOD, grp)][plotdata, on = \"PERIOD\"] plotdata[, grp := paste(grp, variable, sep = \"_\")]  yrbreaks <- c(   min(plotdata$PERIOD),   seq(min(plotdata$PERIOD), max(plotdata$PERIOD), by = 5),   max(plotdata$PERIOD) ) |>   unique()  ggplot(plotdata, aes(x = PERIOD, y = value, col = pgrp, group = grp)) +   geom_line(     data = plotdata[pgrp == \"obs_hist\"], size = 1.1,     linejoin = \"round\", lineend = \"round\"   ) +   geom_line(     data = plotdata[pgrp != \"obs_hist\"], size = 1.1,     linejoin = \"round\", lineend = \"round\"   ) +   scale_x_continuous(breaks = yrbreaks, labels = yrbreaks) +   scale_color_manual(     values = c(       \"obs_hist\" = \"grey\",       \"proj_hist\" = \"forestgreen\",       \"proj_fut\" = \"navyblue\"     ),     breaks = c(\"obs_hist\", \"proj_hist\", \"proj_fut\")   ) +   theme_light() +   theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +   labs(x = \"Year\", col = \"\") +   facet_wrap(~variable, scales = \"free\", ncol = 1, strip.position = \"left\", )"},{"path":"https://bcgov.github.io/climr/articles/climr_workflow_int.html","id":"spatial-output-and-plotting-options","dir":"Articles","previous_headings":"Workflow with downscale","what":"Spatial output and plotting options","title":"Intermediate `climr` workflow","text":"downscale can also provide outputs form SpatVector points plot values chosen climate variable list passed downscale(..., vars), case MAT.  course can now use vector output map variables top DEM raster, prettier visuals:","code":"ds_out_spatial <- downscale(   xyz = xyzDT,   which_refmap = \"auto\",   gcms = \"EC-Earth3\",   gcm_periods = \"2021_2040\",   ssps = \"ssp245\",   max_run = 0,   return_refperiod = FALSE, ## don't return the 1961-1990 normals period   out_spatial = TRUE,   plot = \"MAT\",   vars = c(\"MAT\", \"PPT\", \"PAS\") ) vancouver <- get(data(\"vancouver\")) |>   unwrap()  par(mfrow = c(1, 2)) plot(vancouver_poly,   col = hcl.colors(50, palette = \"Earth\"),   plg = list(x = \"bottom\", title = \"Elevation\"),   mar = c(4, 1, 1, 4) ) plot(vancouver, add = TRUE, col = \"black\") plot(ds_out_spatial, \"MAT\",   col = hcl.colors(50, palette = \"Reds\"),   add = TRUE, type = \"continuous\",   plg = list(x = \"right\", title = \"MAT\") )  plot(vancouver_poly,   col = hcl.colors(50, palette = \"Earth\"),   plg = list(x = \"bottom\", title = \"Elevation\"),   mar = c(4, 1, 1, 4) ) plot(vancouver, add = TRUE, col = \"black\") plot(ds_out_spatial, \"PPT\",   col = hcl.colors(50, palette = \"Blues\"),   add = TRUE, type = \"continuous\",   plg = list(x = \"right\", title = \"PPT\") )"},{"path":"https://bcgov.github.io/climr/articles/climr_workflow_int.html","id":"workflow-with-input_-functions-and-downscale_core","dir":"Articles","previous_headings":"","what":"Workflow with input_* functions and downscale_core()","title":"Intermediate `climr` workflow","text":"Alternatively, user may choose run climate data preparation downscaling functions separately. suggest least twice full understanding steps downscale executes internally. Steps 1 2 bellow download prepare climate data used downscaling step (Step 3). use point locations downscaling.","code":""},{"path":"https://bcgov.github.io/climr/articles/climr_workflow_int.html","id":"get-climate-normals---input_refmap","dir":"Articles","previous_headings":"Workflow with input_* functions and downscale_core()","what":"1) Get climate normals - input_refmap()","title":"Intermediate `climr` workflow","text":"using input_refmap(), establish connection PostGIS server pass bounding box containing point locations interest. “auto” option select source climate normals. list_refmap() provides list available options: ‘refmap_climatena’ corresponds normals North America obtained ClimateNA (Wang et al. 2016); ‘refmap_prism’ corresponds British Columbia PRISM normals; ‘refmap_climr’ corresponds composite British Columbia PRISM, adjusted US PRISM DAYMET (Alberta Saskatchewan), covers western Canada western US. use ‘refmap_climr’ highest resolution product area interest. extent downloaded climate anomalies often larger extent bounding box, vary depending spatial resolution data. demonstrate define bounding box set coordinates. Alternatively, get_bb used extract bounding box around point locations xyzDT. Downloaded normals shown North Vancouver area requested bounding box.","code":"list_refmaps() #> [1] \"refmap_climatena\" \"refmap_prism\"     \"refmap_climr\" dbCon <- data_connect() the_bb <- c(50, 49, -122, -124)  ## alternatively: # the_bb <- get_bb(xyzDT)  normals <- input_refmap(dbCon,   bbox = the_bb,   reference = \"refmap_climr\" ) #> ."},{"path":"https://bcgov.github.io/climr/articles/climr_workflow_int.html","id":"get-climate-projections-andor-historical-observations","dir":"Articles","previous_headings":"Workflow with input_* functions and downscale_core()","what":"2) Get climate projections and/or historical observations","title":"Intermediate `climr` workflow","text":"Data historic future climate projections can obtained gcm_*() functions. input_gcm_hist() used obtain historical anomalies projected (several) GCM, whereas input_gcms() input_gcm_ssp used obtain future anomaly projections period individual years (.e. time series). Historical observations given period individual years can obtained input_obs input_obs_ts, respectively. Downloaded historical future anomalies shown North Vancouver area requested bounding box.","code":"hist_proj <- input_gcm_hist(dbCon,   bbox = the_bb,   gcms = \"EC-Earth3\",   years = 2001:2020,   max_run = 0 ) #> . fut_proj <- input_gcms(dbCon,   bbox = the_bb,   gcms = \"EC-Earth3\",   ssps = \"ssp245\",   period = \"2021_2040\",   max_run = 0 ) #> . fut_proj_ts <- input_gcm_ssp(dbCon,   bbox = the_bb,   gcms = \"EC-Earth3\",   ssps = \"ssp245\",   years = 2021:2040,   max_run = 0 )  hist_obs <- input_obs(dbCon,   bbox = the_bb,   period = \"2001_2020\" ) hist_obs_ts <- input_obs_ts(dbCon,   bbox = the_bb,   years = 2001:2020 ) #> .."},{"path":"https://bcgov.github.io/climr/articles/climr_workflow_int.html","id":"downscale-and-calculate-actual-values-i-e--not-anomalies","dir":"Articles","previous_headings":"Workflow with input_* functions and downscale_core()","what":"3) Downscale and calculate actual values (i.e., not anomalies)","title":"Intermediate `climr` workflow","text":"Now necessary inputs, can downscale climate data. avoid repeating lines code input, ’ll use lapply() .call() iterate several climate inputs downscale. Note .call() work, list climate inputs (inputs) must named according downscale()’s argument names (can list formalArgs(downscale)). ‘all_downscale’ table binding. Outputs shown one location (‘id’)","code":"all_downscale <- downscale_core(xyzDT, refmap = normals, gcms = fut_proj, obs = hist_obs, gcm_ssp_ts = fut_proj_ts, gcm_hist_ts = hist_proj, obs_ts = hist_obs_ts, vars = \"MAT\", out_spatial = FALSE) all_downscale #> Key: <id, GCM, SSP, RUN, PERIOD, DATASET> #>          id       GCM    SSP          RUN    PERIOD   DATASET       MAT #>       <int>    <char> <char>       <char>    <char>    <char>     <num> #>    1:    87      <NA>   <NA>         <NA> 1961_1990      <NA>  9.738779 #>    2:    87      <NA>   <NA>         <NA>      2001 climatena 10.150806 #>    3:    87      <NA>   <NA>         <NA>      2001  cru.gpcc  9.984333 #>    4:    87      <NA>   <NA>         <NA> 2001_2020      <NA> 10.047888 #>    5:    87      <NA>   <NA>         <NA>      2002 climatena 10.290830 #>   ---                                                                   #> 6772: 12936 EC-Earth3 ssp245 ensembleMean      2036      <NA> 12.101026 #> 6773: 12936 EC-Earth3 ssp245 ensembleMean      2037      <NA> 12.002702 #> 6774: 12936 EC-Earth3 ssp245 ensembleMean      2038      <NA> 11.703712 #> 6775: 12936 EC-Earth3 ssp245 ensembleMean      2039      <NA> 12.633595 #> 6776: 12936 EC-Earth3 ssp245 ensembleMean      2040      <NA> 11.836830"},{"path":[]},{"path":"https://bcgov.github.io/climr/articles/guidance_ensembleSelection.html","id":"model-selection","dir":"Articles","previous_headings":"","what":"Model selection","title":"Climate model and scenario selection","text":"Wherever possible, climate change studies benefit use projections multiple models assess modeling uncertainties. broad scientific agreement ensemble least eight independent climate models required represent modeling uncertainties climate change outcomes large regions (Pierce et al. 2009, McSweeney et al. 2014, Cannon 2015, Wilcke Bärring 2016). However, small ensembles 3-5 GCMs may adequate studies limited small area single time year. single representative projection long-term climate trends desired, multi-GCM ensemble mean likely reliable single GCM projection (Pierce et al. 2009).","code":""},{"path":"https://bcgov.github.io/climr/articles/guidance_ensembleSelection.html","id":"recommended-subsets-of-the-13-model-climr-ensemble","dir":"Articles","previous_headings":"Model selection","what":"Recommended subsets of the 13-model climr ensemble","title":"Climate model and scenario selection","text":"13 models provided climr individually useful provide good representation larger CMIP6 ensemble (Mahony et al. 2022). However, like full CMIP6 ensemble viewed arbitrary collection models don’t necessarily provide reliable representation climate change uncertainty, explained NASA’s Gavin Schmidt. Mahony et al. (2022) recommend 8 models ensemble analysis. 8-model ensemble consistent IPCC’s assessment climate sensitivity full 13-model climr ensemble, excludes model problematic spatial artefacts BC Coast Mountains. recommended 8-model ensemble : ACCESS-ESM1.5, CNRM-ESM2-1, EC-Earth3, GFDL-ESM4, GISS-E2-1-G, MIROC6, MPI-ESM1.2-HR, MRI-ESM2.0.","code":""},{"path":"https://bcgov.github.io/climr/articles/guidance_ensembleSelection.html","id":"scenario-selection","dir":"Articles","previous_headings":"","what":"Scenario selection","title":"Climate model and scenario selection","text":"CMIP6 climate projections follow scenarios future greenhouse gas emissions called Shared Socioeconomic Pathways (SSPs). climr includes projections four major SSP scenarios: SSP1-2.6, SSP2-4.5, SSP3-7.0, SSP5-8.5. SSP1-2.6 assumes strong emissions reductions (mitigation) roughly consistent goals Paris Climate Accords limit global warming 2oC pre-industrial temperatures. SSP2-4.5 assumes moderate mitigation roughly consistent current emissions policies economic trends. SSP3-7.0 representative broader range “baseline” scenarios assume absence mitigation policies, associated linear increase rate greenhouse gas emissions. SSP5-8.5 high end baseline scenarios, representing rapid expansion greenhouse gas emissions next several decades end--century emissions three times higher current emissions (Riahi et al. 2017). Collectively, SSP1-2.6, SSP2-4.5, SSP3-7.0 provide reasonable representation optimistic, neutral, pessimistic outlooks global emissions policies socioeconomic development. possible, recommend using three scenarios represent scenario uncertainty climate change projections. SSP2-4.5 alone sufficient studies focused near future (2021-2040 period) since minor differentiation three recommended emissions scenarios period relative differences climate models. SSP5-8.5 used caution impacts adaptation research. emissions pathway described SSP5-8.5 extremely unlikely based constraints supply demand high-carbon energy sources current trends energy economics policy (Hausfather Peters 2020), though SSP5-8.5 greenhouse gas concentrations may plausible, unlikely, due carbon cycle feedbacks.","code":""},{"path":"https://bcgov.github.io/climr/articles/guidance_ensembleSelection.html","id":"time-period-selection","dir":"Articles","previous_headings":"","what":"Time period selection","title":"Climate model and scenario selection","text":"Instead traditional 30-year definition climate normals, climr provides normals set five 20-year periods 21st Century: 2001-2020, 2021-2040, . shorter 20-year periods appropriate representing rapidly changing climates century. practice summarizing climate 20-year periods consistent recent IPCC reports. 2001-2020 period provides opportunity direct comparison model simulations vs. observations, can give important context interpretations future projections. climr normals 2001-2020 period calculated historical model runs years 2001-2014 SSP scenario runs years 2015-2020. interpreting projections near future, important recognize individual GCM projections predictions. GCM runs used climate change projections initiated 1850s directly constrained observed climate conditions. Consequently, GCM projections essentially uncertain next year 20 years future. Decadal climate prediction, analogous weather prediction timescales 1-10 years, emerging yet operational science may help reduce uncertainty near-term projections (Boer et al. 2016). meantime, considered best practice use ensemble climate projections, 8-model ensemble recommended , near-term regional climate change studies (Brekke et al. 2008, Knutti 2008, Pierce et al. 2009). Given recent observed climate may differ substantially ensemble mean, may even outside ensemble range, climate change adaptation decisions near-term (1-10 years) carefully consider recent observed trends addition climate model simulations.","code":""},{"path":"https://bcgov.github.io/climr/articles/guidance_ensembleSelection.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Climate model and scenario selection","text":"Boer, G. J., D. M. Smith, C. Cassou, et al. 2016. Decadal Climate Prediction Project (DCPP) contribution CMIP6. Geoscientific Model Development 9:3751–3777. Brekke, L. D., M. D. Dettinger, E. P. Maurer, M. Anderson. 2008. Significance model credibility estimating climate projection distributions regional hydroclimatological risk assessments. Climatic Change 89:371–394. Burgess, M., J. Ritchie, J. Shapland, R. Pielke. 2021. IPCC baseline scenarios -project CO2 emissions economic growth. Environmental Research Letters 16:014016 Cannon, . J. 2015. Selecting GCM scenarios span range changes multimodel ensemble: Application CMIP5 climate extremes indices. Journal Climate 28:1260–1267. Hausfather, Z., G. P. Peters. 2020. Emissions - “business usual” story misleading. Nature 577:618–620. Knutti, R. 2008. believe model predictions future climate change? Philosophical Transactions Royal Society : Mathematical, Physical Engineering Sciences 366:4647–4664. McSweeney, C. F., R. G. Jones, R. W. Lee, D. P. Rowell. 2014. Selecting CMIP5 GCMs downscaling multiple regions. Climate Dynamics 44:3237–3260. Pierce, D. W., T. P. Barnett, B. D. Santer, P. J. Gleckler. 2009. Selecting global climate models regional climate change studies. Proceedings National Academy Sciences United States America 106:8441–8446. Riahi et al. 2017. Shared Socioeconomic Pathways energy, land use, greenhouse gas emissions implications: overview. Global Environmental Change 42:153–168. Wilcke, R. . ., L. Bärring. 2016. Selecting regional climate scenarios impact modelling studies. Environmental Modelling Software 78:191–201.","code":""},{"path":"https://bcgov.github.io/climr/articles/lapse_rates.html","id":"lapse-rates-calculation","dir":"Articles","previous_headings":"","what":"Lapse rates calculation","title":"Lapse rates","text":"Wang (2016) Climate North America algorithms retrieve monthly climate data elevation values location corresponding grid cell plus eight surrounding cells. climate elevation values nine cells used calculate differences climate variable elevation 36 possible pairs. simple linear regression differences climate variable difference elevation established, slope regression used empirical lapse rate climate variable specific location. local regressions dynamically developed along locations inquiry, call downscaling method “dynamic local downscaling” approach. avoid -adjustments due weak linear relationship, lapse rate weighted R-square value local linear regression. way done package, precompute lapse rates 36 variables store associated normal.","code":""},{"path":"https://bcgov.github.io/climr/articles/lapse_rates.html","id":"computation-details","dir":"Articles","previous_headings":"","what":"Computation details","title":"Lapse rates","text":"Starting equal extent digital elevation model raster (x) 36 climate variables rasters (pre delta method y’s). first convert rasters matrices way easier handle type operation. , since want compute everything one swell swoop, create border extended matrices handle lapse rates values edge raster. Starting sides corners Next step sample extended matrices 8 times compute differences original matrices. going give us stack 8 matrices 36 variables used compute linear regression coefficients. Regresssion coefficients computed using following methods R² adjustment applied. example using two starting matrices Start extending matrices Sample 8 times Now compute relevant coefficients","code":"#' Simple linear regression without the intercept term #' beta_coef = sum(xy) / sum(x²) #' mss = sum(x * beta_coef)², sum of squared fitted values #' rss = sum(ε²), sum of squared (y minus fitted), sum of absolute errors #' R² = mss / (mss + rss) #' Lapse rate = beta_coef * R² (dem <- matrix(sample(0:1000, 25), nrow = 5)) #>      [,1] [,2] [,3] [,4] [,5] #> [1,]  172  869  200  846  426 #> [2,]  406  878  196   76   61 #> [3,]  459  558  516  897  554 #> [4,]   62  926  766  445  772 #> [5,]  484  451  535  566  468 (tmax <- matrix(30 - (dem / 50) %/% 1, nrow = 5)) #>      [,1] [,2] [,3] [,4] [,5] #> [1,]   27   13   26   14   22 #> [2,]   22   13   27   29   29 #> [3,]   21   19   20   13   19 #> [4,]   29   12   15   22   15 #> [5,]   21   21   20   19   21 dem_ext <- climr:::recycle_borders(dem, 5, 5) #> climr version 0.1.0 includes an overhaul of the naming conventions for variables, functions, parameters, and options. Call `data(name_changes)` for a table specifying the correspondence between old and new names. If you have used a previous version of climr you MUST call `cache_clear()` before using this one. (tmax_ext <- climr:::recycle_borders(tmax, 5, 5)) #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] #> [1,]   27   27   13   26   14   22   22 #> [2,]   27   27   13   26   14   22   22 #> [3,]   22   22   13   27   29   29   29 #> [4,]   21   21   19   20   13   19   19 #> [5,]   29   29   12   15   22   15   15 #> [6,]   21   21   21   20   19   21   21 #> [7,]   21   21   21   20   19   21   21 dem_d <- climr:::deltas(dem_ext, 5, 5) (tmax_d <- climr:::deltas(tmax_ext, 5, 5)) #> $northwest #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0   14  -13   12   -8 #> [2,]    5   14  -14   -3  -15 #> [3,]    1    3   -7   14   10 #> [4,]   -8    9    4   -2   -2 #> [5,]    8    8   -8   -4    1 #>  #> $north #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    0 #> [2,]    5    0   -1  -15   -7 #> [3,]    1   -6    7   16   10 #> [4,]   -8    7    5   -9    4 #> [5,]    8   -9   -5    3   -6 #>  #> $northeast #>      [,1] [,2] [,3] [,4] [,5] #> [1,]  -14   13  -12    8    0 #> [2,]   -9   13  -13   -7   -7 #> [3,]   -8    8    9   16   10 #> [4,]  -10    8   -2   -3    4 #> [5,]   -9   -6    2   -4   -6 #>  #> $east #>      [,1] [,2] [,3] [,4] [,5] #> [1,]  -14   13  -12    8    0 #> [2,]   -9   14    2    0    0 #> [3,]   -2    1   -7    6    0 #> [4,]  -17    3    7   -7    0 #> [5,]    0   -1   -1    2    0 #>  #> $southeast #>      [,1] [,2] [,3] [,4] [,5] #> [1,]  -14   14    3   15    7 #> [2,]   -3    7  -14  -10  -10 #> [3,]   -9   -4    2    2   -4 #> [4,]   -8    8    4   -1    6 #> [5,]    0   -1   -1    2    0 #>  #> $south #>      [,1] [,2] [,3] [,4] [,5] #> [1,]   -5    0    1   15    7 #> [2,]   -1    6   -7  -16  -10 #> [3,]    8   -7   -5    9   -4 #> [4,]   -8    9    5   -3    6 #> [5,]    0    0    0    0    0 #>  #> $southwest #>      [,1] [,2] [,3] [,4] [,5] #> [1,]   -5    9  -13   13    7 #> [2,]   -1    8   -8   -9  -16 #> [3,]    8   10   -8    2    3 #> [4,]   -8    9    6   -2    4 #> [5,]    0    0    1    1   -2 #>  #> $west #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0   14  -13   12   -8 #> [2,]    0    9  -14   -2    0 #> [3,]    0    2   -1    7   -6 #> [4,]    0   17   -3   -7    7 #> [5,]    0    0    1    1   -2 # Number of surrounding cells n <- length(dem_d) # Sums of x squared sum_xx <- climr:::sum_matrix(   climr:::sup(dem_d, 2) ) beta_coef <- climr:::sum_matrix(   climr:::prod_matrix(dem_d, tmax_d) ) / sum_xx # We need the fitted values to compute the # coefficient of determination f <- climr:::fitted(dem_d, beta_coef) # We use the same approach as stats::summary.lm # applied to a list matrices mss <- climr:::sum_matrix(   climr:::sup(f, 2) ) rss <- climr:::sum_matrix(   climr:::sup(     climr:::delta_matrix(tmax_d, f),     2   ) ) # We can combine the resulting matrices to get the # coefficient of determination and multiply by beta coficient (lapse_rate <- beta_coef * mss / (mss + rss)) #>             [,1]        [,2]        [,3]        [,4]        [,5] #> [1,] -0.02008744 -0.01991429 -0.01905148 -0.01914296 -0.01924584 #> [2,] -0.01963220 -0.01959146 -0.02044560 -0.01978590 -0.01938747 #> [3,] -0.01960868 -0.01996766 -0.01982820 -0.01927210 -0.01988396 #> [4,] -0.01974567 -0.01959050 -0.01996064 -0.02104873 -0.01960000 #> [5,] -0.01927916 -0.01898502 -0.02007731 -0.02041018 -0.01978681"},{"path":"https://bcgov.github.io/climr/articles/methods_downscaling.html","id":"stage-1-change-factor-aka-delta-downscaling","dir":"Articles","previous_headings":"","what":"Stage 1: change-factor (aka “delta”) downscaling","title":"`climr` downscaling methods","text":"climr uses simple method called change-factor downscaling. method sometimes referred climate imprint method (Hunter Meentemeyer 2005), delta method (Wang et al. 2016), simple mean bias correction (Maraun 2016). method adds low-spatial-resolution anomalies (e.g., climate model) high-resolution gridded climate map (Tabor Williams 2010). change-factor downscaling simplistic downscaling daily time series extremes indices, sufficient downscaling temperature precipitation data low temporal resolution (e.g., 20-year climate averages). default high-resolution climate maps used climr 800m gridded maps mean daily maximum temperature (Tmax), mean daily minimum temperature (Tmin), precipitation (PPT) 1961-1990 period. climr uses custom composite climate maps multiple sources: PRISM Climate Group (USA), Pacific Climate Impacts Consortium (BC), Daymet (Mexico Canada outside BC). one map month year, total 36 climate maps. July Tmax reference map looks like vicinity Vancouver, BC. climr 1961-1990 reference climate map July Tmax Global climate model data much lower resolution (60-200km grid scale). change July Tmax EC-Earth3 global climate model 2041-2060 time period, relative model’s 1961-1990 climate. case, warming greater areas (eastward) coast. Low-resolution anomalies (change) July Tmax EC-Earth3 global climate model 2041-2060 time period, relative model’s 1961-1990 climate downscale GCM projection, first interpolate low-resolution GCM anomaly (case, temperature change 1961-1990 2041-2060) resolution detailed reference climate map: Interpolation low-resolution climate model anomalies high resolution reference climate map. add smoothed anomalies high-resolution 1961-1990 climate map, resulting high-resolution map simulated climate 2041-2060. Downscaled 2041-2060 July Tmax EC-Earth model, resulting addition interpolated low-resolution model anomalies (change factors) high resolution 1961-1990 reference climate. case precipitation, multiply reference climate relative anomaly (e.g., multiply 1.07 7% increase precipitation), rather adding absolute anomaly. example illustrates change-factor downscaling able represent effect ocean reducing warming rates coastal areas, large-scale effect represented coarse resolution global climate model. However, downscaling produced uniform warming rate valley bottom mountain top. reality, expect large elevation-dependent differences warming rate due example changes snowpack. inability represent changes occur spatial scales smaller (large) global climate model grid cells important weakness change-factor downscaling statistical downscaling methods. Similarly, change-factor downscaling can’t represent role fine-scale features like lakes, vegetation, cold-air pooling, soil moisture. important considerations interpreting results statistical downscaling.","code":""},{"path":"https://bcgov.github.io/climr/articles/methods_downscaling.html","id":"stage-2-elevation-adjustment","dir":"Articles","previous_headings":"","what":"Stage 2: Elevation adjustment","title":"`climr` downscaling methods","text":"climr uses elevation adjustment downscale temperature variables scales finer resolution reference climate map. inferring relationship temperature elevation, known lapse rate, reference climate maps. local lapse rate calculated grid cell reference climate map using linear regression temperature elevation among focal cell 8 neighbours. gridded lapse rates included SpatRaster returned input_refmap() function used . climr lapse rate layer July Tmax: July Tmax lapse rates (change temperature relative elevation; oC/m) used elevation adjustment example indicates BC PRISM maps July Tmax lower lapse rates maritime influenced mountains (4oC/km) mountains less maritime influence (8oC/km). map lapse rates artefacts areas relief; artefacts consequence unless users supply elevations areas deviate substantially realistic ground elevations areas flat topography (e.g., asking climr provide climate values 200m elevation Fraser River delta, uniformly sea level). can use downscale() function 90m digital elevation model (DEM) illustrate elevation adjustment Vancouver’s north shore mountains, shown . 1961-1990 July Tmax 800m reference clmate map (left) elevation-adjusted 90m grid (right). Elevation adjustment provides visually appealing map can useful improving precision climate values points interest areas steep topography. However, important remember climr output represents effects regional climate elevation. Microclimatic factors aspect, vegetation, water bodies, frost pooling, soil moisture represented maps. default, climr doesn’t apply elevation adjustment precipitation, cases elevation influence precipitation scales less 1km. Instead, precipitation scales finer 800m simply interpolated nearest four grid points reference map. Users can choose apply elevation-adjustment precipitation selecting ppt_lr = TRUE downscale() function.","code":""},{"path":"https://bcgov.github.io/climr/articles/methods_downscaling.html","id":"stage-3-derived-variables","dir":"Articles","previous_headings":"","what":"Stage 3: Derived variables","title":"`climr` downscaling methods","text":"value delta downscaling isn’t just obtaining new absolute values temperature precipitation. allows us calculate anomalies indices don’t scale linearly temperature precipitation, degree-days precipitation snow. climr currently uses ClimateNA derived variable equations (Wang et al. 2016). equations developed fitting non-linear models relationship variable interest calculated daily weather station data monthly temperature /precipitation weather stations. example, equations January degree-days 0oC 18oC derived fitting piecewise function variables January mean temperature 1961-1990 period 4891 stations across North America, shown Figure 4 Wang et al. (2016): Figure 4 Wang et al. (2016), illustrating derivation equations January degree-days 0oC 18oC based January mean temperature North American weather stations Using climr output EC-Earth3 climate model, can compare change January mean temperature change January degree days 0oC 2041-2060 period relative 1961-1990 baseline. January mean temperature interpolated directly GCM, variation climate change trend variable transition one GCM grid cell neighbours. contrast, January degree-days 0oC, derived directly January mean temperature, strong elevation-dependence climate change trend. Downscaled change January mean temperature (left) derived variable January degree days 0oC (right), using EC-Earth model simulation 2041-2060.","code":""},{"path":[]},{"path":"https://bcgov.github.io/climr/articles/methods_downscaling.html","id":"high-resolution-climate-maps-used-by-climr","dir":"Articles","previous_headings":"climr data sources","what":"High-resolution climate maps used by climr","title":"`climr` downscaling methods","text":"default climate maps climr composite western North America south 60oN (800m grid scale). compiled composite PRISM Climate Group (USA), Pacific Climate Impacts Consortium (BC), Daymet (Canada outside BC). recommend reference climate map following reasons: (1) 800m resolution preserves localized lapse rates (e.g. temperature inversions) averaged 4km ClimateNA composite; (2) PRISM climatology BC preserved blending outwards BC border; (3) lapse rates Alberta Rockies better defined; (4) Tmin Washington, Idaho, Montana reconstructed correct unrealistic lapse rates. climr provides two options high-resolution reference climate map: ClimateNA composite North America, 4km grid scale (Wang et al. 2016). composite compiled separate PRISM climate surfaces BC, Alaska, Yukon/Alberta/Saskatchewan/Manitoba, contiguous US, WorldClim (Fick Hijmans 2017) remainder continent. User-supplied climate maps. downscale() function can accept climate map reference normals. allows user provide reference climate maps, : (1) Alternative publicly available gridded climatologies CHELSA, Daymet, Worldclim; (2) output weather models (e.g., WRF); (3) custom super-high resolution climate maps small study areas.","code":""},{"path":"https://bcgov.github.io/climr/articles/methods_downscaling.html","id":"historical-observational-time-series-and-climates","dir":"Articles","previous_headings":"climr data sources","what":"Historical observational time series and climates","title":"`climr` downscaling methods","text":"climr provides historical observed climates annual time series 1901-present 10-year, 20-year, 30-year periods 1951-2020. downscaled way global climate model data: adding low-resolution anomalies (change factors) high-resolution reference climate map. Temperature anomalies Climatic Research Unit (CRU) Time Series dataset. Precipitation anomalies Global Precipitation Climatology Centre global dataset, better representation Canadian precipitation stations CRU Time Series dataset.","code":""},{"path":[]},{"path":"https://bcgov.github.io/climr/articles/methods_ensembleSelection.html","id":"selection-of-the-global-climate-model-ensemble","dir":"Articles","previous_headings":"","what":"Selection of the global climate model ensemble","title":"Global climate model ensemble selection","text":"13 global climate models available climr selected Mahony et al. (2022) using following criteria: Criterion 1: Minimum 3 historical runs available. criterion ensures robust bias correction. Bias correction climr performed using delta method: model’s simulations adjusted remove difference (delta factor) simulated observed climate 1961-1990 reference period. Calculating delta factor mean least three simulations reduces confounding influence internal variability individual runs bias correction. 44 ScenarioMIP models passed criterion. Criterion 2: Tmin Tmax available. Tmin Tmax basic climate variables climr. models provide variables incompatible climr. 10 models failed criterion. Notably, CESM2 provide Tmin Tmax future projections, due archiving error variables available historical runs model. Criterion 3. Complete scenarios. Models need least one simulation four major SSP marker scenarios (SSP1-2.6, SSP2-4.5, SSP3-7.0, SSP5-8.5). eight models failed criterion. Criterion 4. One model per institution. criterion widely applied best practice ensemble selection (Leduc et al. 2016). rationale selection provided . * CNRM-ESM2-1 (ECS 4.8oC) chosen CNRM-CM6-1 (ECS 4.9oC) give preference ESM AOGCM configuration; * EC-Earth3 (ECS 4.3oC) arbitrarily chosen EC-Earth3-Veg (ECS 4.3oC); * INM-CM5-0 (ECS 1.9oC) arbitrarily chosen INM-CM4-8 (ECS 1.8oC); * MPI-ESM1-2-HR (ECS 3.0oC) chosen MPI-ESM1-2-LR (ECS 3.0oC) due high resolution availability >1 run SSP5-8.5. * MIROC6 (ECS 2.6oC) chosen MIROC-ES2L (ECS 2.7oC) runs/scenario, higher resolution, latter high temperature bias British Columbia. * purposes ensemble, different physics forcing schemes considered different models. used r*i1p3f1 variants GISS-E2-1-G model, complete set scenario simulations. Criterion 5. closely related models. Models share components excluded, following Figure 5 Brunner et al. (2020). NESM3 excluded due close relation MPI-ESM1. Criterion 6. large biases. Bias correction performed climr disrupts physical connection climate variables, distortions increase size biases simulation. reason, models small biases preferable models large biases, else equal. assessment British Columbia, AWI-CM-1-1-MR showed extreme temperature biases warranted exclusion ensemble. 13-model ensemble mean global equilibrium climate sensitivity (ECS) 3.7oC range 1.9-5.6oC, matches full CMIP6 ensemble ECS (3.7oC; 1.8-5.6oC, Meehl et al. 2020.","code":""},{"path":"https://bcgov.github.io/climr/articles/methods_ensembleSelection.html","id":"the-8-model-ensemble-recommended-for-general-purpose","dir":"Articles","previous_headings":"","what":"The 8-model ensemble recommended for general purpose","title":"Global climate model ensemble selection","text":"13 models provided climr valid analysis relative warming levels. However, Mahony et al. (2022) recommended subset 8 models ensemble analysis, based following four criteria: Criterion 7. Constraints equilibrium climate sensitivity (ECS). Multiple lines evidence indicate Earth’s equilibrium climate sensitivity (ECS) likely 2oC 5oC (Hausfather et al. 2022). evidence lower bound robust, weaker upper bound. one perspective, inclusion models ECS outside range uneccessarily increases modeling uncertainty downstream analyses. opposing perspective high-sensitivity models useful representation high-impact, low-likelihood scenarios (Sutton Hawkins 2020). perspectives valid, preference depends objectives analysis. Criterion 8. Model resolution. Four climr models high enough resolution resolve macrotopography e.g., clearly differentiate coast mountains Columbia/Rocky Mountains. resolved macrotopography produce elevation-dependent climate change signals rainshadow effects. models weighted towards inclusion despite criteria low number simulations per scenario. Conversely, models low resolution weighted towards exclusion. Criterion 9. Number simulation runs. climr primarily designed analysis projected climate normals; climate change signal primary interest. Internal variability models confounding factor, producing erratic climate change trajectories noisy climate variables like precipitation winter temperature. signal--noise ratio increased averaging projected normals multiple simulations emissions scenario. Four models (BCC, INM, GFDL, MRI) one run four scenarios, consideration exclusion. Criterion 10: Spatial pattern. IPSL-CM6A-LR pronounced pattern localized summer heating along BC coast ranges, little warming adjacent cells. pattern present Tmin Tmax summer months. may physically credible response within model context, example due snow albedo feedback. However, purposes climr problematic downscale warming pattern across elevations within cell. problem isolated IPSL-CM6A-LR, cell--cell contrast especially pronounced IPSL create artefacts analyses based climr. following models excluded based combination four screening criteria: CanESM5, low horizontal resolution creates grid-box artefacts downscaling high climate sensitivity (ECS 5.6oC) also represented UKESM1-0-LL. INM-CM5-0, low climate sensitivity (ECS 1.9oC) outlier among CMIP6 models -representing observed 1975-2014 global temperature trend (Liang et al. 2020). addition, model one simulation scenarios, producing less robust climate signal. BCC-CSM2-MR, due single simulation scenario low topographic resolution. IPSL-CM6A-LR, due isolated grid cells high summer warming BC Coast Ranges. warming cells may physically plausible (e.g., due snow albedo feedbacks) model’s simplified topography, problematic downscaling high spatial resolution climr. fifth model, UKESM1-0-LL, also high climate sensitivity, similar CanESM5, assessed unlikely based observational evidence. researchers may wish constrain analysis ensemble observations excluding model. Others may wish include model ensembles representation long tail uncertainty upper limit climate sensitivity (Sutton 2018). 8-model subset excludes UKESM1-0 mean global ECS 3.4oC (2.6-4.8oC).","code":""},{"path":"https://bcgov.github.io/climr/articles/methods_ensembleSelection.html","id":"comparison-of-the-13-model-and-8-model-ensemble","dir":"Articles","previous_headings":"","what":"Comparison of the 13-model and 8-model ensemble","title":"Global climate model ensemble selection","text":"differences 13-model 8-model ensembles illustrated Figure 1. mean summer daily maximum temperature (tasmax/Tmax_sm) averaged North America, 13-model ensemble mean 0.5oC (13%) warmer 8-model ensemble mean. proportional differences greater higher emissions scenarios (Figure 1, top). difference ensembles roughly equal difference adjacent scenarios mid-century (2040-2070), less important differences among scenarios later century. emphasizes uncertainty future emissions overshadows differences 13-model 8-model ensemble means. range year--year variability much greater 13-model ensemble (Figure 1, top). largely due extreme warming produced high latitudes UKESM1-0 model. interannual variability individual model runs affect users climr (since averaged climate normals), Figure 1 (bottom) illustrates importance careful ensemble selection analysis climate time series. Figure 1: Comparison ClimateNA 13-model ensemble (dashed lines) 8-model ensemble (solid lines). variable mean summer daily maximum temperature (tasmax/Tmax_sm) averaged North America. 8-model ensemble excludes models ECS outside IPCC-assessed 2-5oC range. (top) Ensemble mean projections four main CMIP6 marker scenarios. (bottom) Ensemble mean full range (min/max simulations models) SSP2-4.5 scenario.","code":""},{"path":"https://bcgov.github.io/climr/articles/methods_ensembleSelection.html","id":"reconciling-the-equilibrium-climate-sensitivity-of-the-cmip6-ensemble-with-observational-constraints-excerpted-from-mahony-et-al--2022","dir":"Articles","previous_headings":"","what":"Reconciling the equilibrium climate sensitivity of the CMIP6 ensemble with observational constraints (Excerpted from Mahony et al. 2022)","title":"Global climate model ensemble selection","text":"13-model ensemble, like full CMIP6 ensemble, mean (3.7oC) upper limit (5.6oC) equilibrium climate sensitivity substantially exceeds IPCC AR6 assessed best estimate ECS 3oC likely upper limit 5oC (Arias et al. 2021). words, 13-model ensemble contains models simulate stronger global warming supported multiple lines observational evidence. Five (38%) 13 models IPCC AR6 assessed likely upper limit ECS 4oC, two (15%) models likely upper limit 5oC. ensemble strictly conform IPCC assessed range, two models exceeding 4oC ECS models exceeding 5oC, following IPCC’s probabilistic definitions likely (one-sided p>83%) likely (one-sided p>95%). need reconcile CMIP ensemble ECS range observational constraints new dilemma climate change impacts adaptation researchers. long agreed model democracy (one model, one vote) strictly valid method assessing climate change uncertainty (Knutti 2010, Leduc et al. 2016). However, prior CMIP6 objection somewhat academic since distribution ECS CMIP ensembles approximately matched (wider) range ECS supported lines evidence (Schmidt 2021). practical purposes reasonable analysts use multimodel ensemble spread previous CMIP generations proxy scientific uncertainty climate change. approach longer valid given incongruence CMIP6 ensemble range ECS IPCC assessed range (Schmidt 2021). Careful model selection now required avoid biasing regional climate change analyses. several viable approaches constrain CMIP6 ensembles downscaled regional analyses. Weighting models based observational constraints possible regional analyses (Ribes et al. 2021). However, practice many analyses require simply selecting subset CMIP6 ensemble closer IPCC assessed range, done 8-model subset. disadvantage approach discards valuable information excluded models. CanESM5 UKESM1 models advanced models respected modeling centers, demonstrated skill modeling many Earth system processes (Eyring et al. 2021). Expressing variables interest relative amount regional global warming widely practiced technique facilitates inclusion high-ECS models removing timing warming factor ensemble spread (Arias et al. 2021). conceivable techniques used single study; use 8-model ensemble time-relevant analyses larger ensemble analyses warming level relevant. considerations highlight full CMIP6 ensemble somewhat arbitrary collection non-independent models, careful ensemble selection necessary achieve meaningful representation modeling uncertainty.","code":""},{"path":"https://bcgov.github.io/climr/articles/methods_ensembleSelection.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Global climate model ensemble selection","text":"Arias, P. ., N. Bellouin, E. Coppola, et al. 2021. Technical Summary. Pages TS1-150 V. Masson-Delmotte, P. Zhai, . Pirani, et al., editors. Climate Change 2021: Physical Science Basis. Contribution Working Group Sixth Assessment Report Intergovernmental Panel Climate Change. Cambridge University Press. Eyring, V., N. P. Gillett, K. M. . Rao, et al. 2021. Human influence climate system. Pages 1–202 V. Masson-Delmotte, P. Zhai, . Pirani, et al., editors. Climate Change 2021: Physical Science Basis. Contribution Working Group Sixth Assessment Report Intergovernmental Panel Climate Change. Cambridge University Press. Mahony, C.R., T. Wang, . Hamann, .J. Cannon. 2022. global climate model ensemble downscaled monthly climate normals North America. International Journal Climatology. 42:5871-5891. doi.org/10.1002/joc.7566 Hausfather, Z., K. Marvel, G. . Schmidt, J. W. Nielsen-Gammon, M. Zelinka. 2022. Climate simulations: recognize “hot model” problem. Nature 605:26–29. Knutti, R. 2010. end model democracy? Climatic Change 102:395–404. Leduc, M., R. Laprise, R. de Elia, L. Separovic. 2016. Institutional Democracy Good Proxy Model Independence? Journal Climate 29:8301–8316. Ribes, ., S. Qasmi, N. P. Gillett. 2021. Making climate projections conditional historical observations. Science Advances 7:1–10. Schmidt, G.. 2021. #NotAllModels. RealClimate. Available : https://www.realclimate.org/index.php/archives/2021/08/notallmodels/ [Accessed 4th January 2022]","code":""},{"path":"https://bcgov.github.io/climr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kiri Daust. Author, maintainer. Colin Mahony. Author. Bruno Tremblay. Author. Ceres Barros. Author. Francois Bornais. Contributor. Province British Columbia. Copyright holder, funder.","code":""},{"path":"https://bcgov.github.io/climr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Daust K, Mahony C, Tremblay B, Barros C (2024). climr: Downscaling climate data R. R package version 0.1.0.","code":"@Manual{,   title = {climr: Downscaling climate data in R},   author = {Kiri Daust and Colin Mahony and Bruno Tremblay and Ceres Barros},   year = {2024},   note = {R package version 0.1.0}, }"},{"path":[]},{"path":"https://bcgov.github.io/climr/index.html","id":"climr-an-r-package-of-downscaled-climate-data-for-north-america","dir":"","previous_headings":"","what":"climr: An R package of downscaled climate data for North America","title":"Downscaling climate data in R","text":"climr experimental R package builds downscaling concepts operationalized ClimateNA tool (Wang et al. 2016). provides downscaling observational simulated climate data using change-factor (.k.. climate imprint) downscaling, simple method adds low-spatial-resolution climate anomalies high-spatial-resolution reference climatological map, additional elevation adjustment “scale-free” downscaling. climr designed fast minimize local data storage requirements. , uses remote PostGIS database, optionally caches data locally.","code":""},{"path":"https://bcgov.github.io/climr/index.html","id":"subscribe","dir":"","previous_headings":"climr: An R package of downscaled climate data for North America","what":"Subscribe","title":"Downscaling climate data in R","text":"actively developing climr releasing minor versions every month two. like receive email updates new versions climr released, subscribe climr GitHub repo using following steps: Navigate https://github.com/bcgov/climr. Click “Watch” button top right repository page. Choose “Custom”. Select “Releases”.","code":""},{"path":"https://bcgov.github.io/climr/index.html","id":"features","dir":"","previous_headings":"climr: An R package of downscaled climate data for North America","what":"Features","title":"Downscaling climate data in R","text":"climr provides following data: Two historical observational time series: (1) 1901-2023 ClimateNA time series (Wang et al., 2016) (2) 1901-2022 combined Climatic Research Unit TS dataset (temperature) Global Precipitation Climatology Centre dataset (precipitation). Multiple historical (1851-2014) future (2015-2100) climate model simulations 13 CMIP6 global climate models, monthly time series 20-year normals. User selection single multiple climate variables, derived variables following ClimateNA methodology Wang et al. (2016).","code":""},{"path":"https://bcgov.github.io/climr/index.html","id":"data-sources","dir":"","previous_headings":"climr: An R package of downscaled climate data for North America","what":"Data Sources","title":"Downscaling climate data in R","text":"high resolution reference climate maps Western Canada Western US custom 800m-resolution mosaic BC PRISM, adjusted US PRISM, Western Canada PRISM, Daymet (Alberta Saskatchewan). Reference climatologies North America 4km-resolution ClimateNA (Wang et al. 2016) mosaics PRISM (BC, US, W. Canada) WorldClim (rest North America). ClimateNA mosaics accessed AdaptWest. Historical observational time series obtained ClimateNA (Wang et al. 2016). CMIP6 global climate model simulations downloaded Earth System Grid Federation. majority downloads conducted Tongli Wang, Associate Professor UBC Department Forest Conservation Sciences. 13 global climate models selected climr, best practices ensemble analysis, described Mahony et al. (2022) summarized vignette(\"climr_methods_ensembleSelection\").","code":""},{"path":"https://bcgov.github.io/climr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Downscaling climate data in R","text":"climr available GitHub. install please use: want install development version:","code":"remotes::install_github(\"bcgov/climr\") remotes::install_github(\"bcgov/climr@devl\")"},{"path":"https://bcgov.github.io/climr/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Downscaling climate data in R","text":"See: vignette(\"climr_workflow_beg\") simple climr workflow; vignette(\"climr_workflow_int\") deeper dive climr advanced examples can used; vignette(\"climr_with_rasters\") several examples work climr using spatial inputs outputs, raster vector data.","code":""},{"path":"https://bcgov.github.io/climr/index.html","id":"methods","dir":"","previous_headings":"","what":"Methods","title":"Downscaling climate data in R","text":"overview downscaling methods used climr see vignette(\"methods_downscaling\")","code":""},{"path":"https://bcgov.github.io/climr/index.html","id":"known-issues","dir":"","previous_headings":"","what":"Known issues","title":"Downscaling climate data in R","text":"Downloads time series take long time. looking ways speed , recommend users dedicate time prior analysis cache time series interest areas interest batch. time series cached, don’t need downloaded . still working documentation, examples, vignettes. Please let us know something isn’t clear, preferably GitHub issue.","code":""},{"path":"https://bcgov.github.io/climr/index.html","id":"license","dir":"","previous_headings":"Known issues","what":"License","title":"Downscaling climate data in R","text":"Copyright 2024 Province British Columbia Licensed Apache License, Version 2.0 (“License”); may use file except compliance License. may obtain copy License http://www.apache.org/licenses/LICENSE-2.0 Unless required applicable law agreed writing, software distributed License distributed “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied. See License specific language governing permissions limitations License. climr logo uses icon designed Freepik, Flaticon.com, available .","code":""},{"path":"https://bcgov.github.io/climr/index.html","id":"acknowledgements","dir":"","previous_headings":"Known issues","what":"Acknowledgements","title":"Downscaling climate data in R","text":"acknowledge World Climate Research Programme, , Working Group Coupled Modelling, coordinated promoted CMIP6. thank climate modeling groups producing making available model output, Earth System Grid Federation (ESGF) archiving data providing access, multiple funding agencies support CMIP6 ESGF.","code":""},{"path":"https://bcgov.github.io/climr/index.html","id":"references","dir":"","previous_headings":"Known issues","what":"References","title":"Downscaling climate data in R","text":"Mahony, C.R., T. Wang, . Hamann, .J. Cannon. 2022. global climate model ensemble downscaled monthly climate normals North America. International Journal Climatology. 42:5871-5891. doi.org/10.1002/joc.7566 Wang, Tongli, Andreas Hamann, Dave Spittlehouse, Carlos Carroll. 2016. “Locally Downscaled Spatially Customizable Climate Data Historical Future Periods North America.” Edited Inés Álvarez. PLOS ONE 11 (6): e0156720.","code":""},{"path":"https://bcgov.github.io/climr/reference/BECcols.html","id":null,"dir":"Reference","previous_headings":"","what":"Colour scheme for Biogeoclimatic Ecological Classification Zones — BECcols","title":"Colour scheme for Biogeoclimatic Ecological Classification Zones — BECcols","text":"data.table RGB HEX colours biogeoclimatic zones BC.","code":""},{"path":"https://bcgov.github.io/climr/reference/BECcols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Colour scheme for Biogeoclimatic Ecological Classification Zones — BECcols","text":"","code":"BECcols"},{"path":"https://bcgov.github.io/climr/reference/BECcols.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Colour scheme for Biogeoclimatic Ecological Classification Zones — BECcols","text":"data.table","code":""},{"path":"https://bcgov.github.io/climr/reference/BECcols.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Colour scheme for Biogeoclimatic Ecological Classification Zones — BECcols","text":"colour scheme commonly used BC provincial government.","code":""},{"path":"https://bcgov.github.io/climr/reference/BECz_vancouver.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Biogeoclimatic Ecological Classification Zones — BECz_vancouver","title":"Example Biogeoclimatic Ecological Classification Zones — BECz_vancouver","text":"shapefile biogeoclimatic zones coast Vancouver, BC, Canada. use data set, need terra::unwrap first, e.g.: BECz_vancouver <- terra::unwrap(get(data(BECz_vancouver)))","code":""},{"path":"https://bcgov.github.io/climr/reference/BECz_vancouver.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Biogeoclimatic Ecological Classification Zones — BECz_vancouver","text":"","code":"BECz_vancouver"},{"path":"https://bcgov.github.io/climr/reference/BECz_vancouver.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Biogeoclimatic Ecological Classification Zones — BECz_vancouver","text":"PackedSpatVector","code":""},{"path":"https://bcgov.github.io/climr/reference/BECz_vancouver.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example Biogeoclimatic Ecological Classification Zones — BECz_vancouver","text":"obtained bcdata package, using bcdc_get_data(\"bec-map-generalized-1-20k-\")","code":""},{"path":"https://bcgov.github.io/climr/reference/BECz_vancouver_ras.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Biogeoclimatic Ecological Classification Zones in raster format — BECz_vancouver_ras","title":"Example Biogeoclimatic Ecological Classification Zones in raster format — BECz_vancouver_ras","text":"categorical raster biogeoclimatic zones coast Vancouver, BC, Canada. Derived BECz_vancouver using dem_vancouver template extent, resolution projection information. use data set, need terra::unwrap first, e.g.: BECz_vancouver_ras <- terra::unwrap(get(data(BECz_vancouver_ras)))","code":""},{"path":"https://bcgov.github.io/climr/reference/BECz_vancouver_ras.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Biogeoclimatic Ecological Classification Zones in raster format — BECz_vancouver_ras","text":"","code":"BECz_vancouver_ras"},{"path":"https://bcgov.github.io/climr/reference/BECz_vancouver_ras.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Biogeoclimatic Ecological Classification Zones in raster format — BECz_vancouver_ras","text":"PackedSpatRaster","code":""},{"path":"https://bcgov.github.io/climr/reference/BECz_vancouver_ras.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example Biogeoclimatic Ecological Classification Zones in raster format — BECz_vancouver_ras","text":"derived BECz_vancouver","code":""},{"path":"https://bcgov.github.io/climr/reference/Caching.html","id":null,"dir":"Reference","previous_headings":"","what":"Return package local cache path — cache_path","title":"Return package local cache path — cache_path","text":"Return package local cache path Clear package's local cache path Attempts delete folder/files cache_path().","code":""},{"path":"https://bcgov.github.io/climr/reference/Caching.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return package local cache path — cache_path","text":"","code":"cache_path()  cache_clear(what = c(\"gcms\", \"gcmts\", \"gcmhist\", \"reference\", \"obs\", \"obs_ts\"))"},{"path":"https://bcgov.github.io/climr/reference/Caching.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return package local cache path — cache_path","text":"character. data folders cleared? Accepts \"reference\", \"gcms\" .","code":""},{"path":"https://bcgov.github.io/climr/reference/Caching.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return package local cache path — cache_path","text":"character. full path package local cache. TRUE FALSE depending whether cache cleared successfully .","code":""},{"path":"https://bcgov.github.io/climr/reference/Caching.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return package local cache path — cache_path","text":"default, uses tools::R_user_dir(). cache location can set using climr.cache.path option options(\"climr.cache.path\" = \"your_path\"). may fail R permission delete files/folders cache_path() directory","code":""},{"path":[]},{"path":"https://bcgov.github.io/climr/reference/climr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"climr: Downscaling climate data in R — climr-package","title":"climr: Downscaling climate data in R — climr-package","text":"`climr` R package builds downscaling concepts operationalized ClimateNA tool (climatena.ca) (Wang et al. 2016). provides downscaling observational simulated climate data using change-factor downscaling, simple method adds low-spatial-resolution climate anomalies high-spatial-resolution reference climatological map, additional elevation adjustment temperature. Elevation-adjusted monthly values basic climate elements (temperature precipitation) used estimate derived variables (e.g., degree-days) based published equations parameters Wang et al. 2016. `climr` designed fast minimize local data storage requirements. , uses remote PostGIS database, optionally caches data locally.","code":""},{"path":"https://bcgov.github.io/climr/reference/climr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"climr: Downscaling climate data in R — climr-package","text":"Maintainer: Kiri Daust kiri.daust@gov.bc.ca Authors: Colin Mahony Colin.Mahony@gov.bc.ca (ORCID) Bruno Tremblay bruno@boostao.ca (ORCID) Ceres Barros ceres.barros@gov.bc.ca (ORCID) contributors: Francois Bornais francois@boostao.ca [contributor] Province British Columbia [copyright holder, funder]","code":""},{"path":"https://bcgov.github.io/climr/reference/data-option-lists.html","id":null,"dir":"Reference","previous_headings":"","what":"List available runs, global circulation models, periods and climate scenarios — list_gcms","title":"List available runs, global circulation models, periods and climate scenarios — list_gcms","text":"list_gcms lists available global circulation models. list_ssps lists available shared socioeconomic pathways. list_gcm_periods lists available periods. list_run lists available runs given GCM. list_refmaps lists available normals. list_obs_periods lists available obs periods list_vars lists climate variables list_obs_years lists available years obs time series list_gcm_ssp_years lists available years future projections' time series list_gcm_hist_years lists available years obs projections' time series","code":""},{"path":"https://bcgov.github.io/climr/reference/data-option-lists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List available runs, global circulation models, periods and climate scenarios — list_gcms","text":"","code":"list_gcms()  list_ssps()  list_gcm_periods()  list_run(dbCon, gcms)  list_refmaps()  list_obs_periods()  list_vars(set = c(\"All\", \"Monthly\", \"Seasonal\", \"Annual\"), only_extra = FALSE)  list_obs_years()  list_gcm_ssp_years()  list_gcm_hist_years()"},{"path":"https://bcgov.github.io/climr/reference/data-option-lists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List available runs, global circulation models, periods and climate scenarios — list_gcms","text":"dbCon db connection object created data_connect. gcms Character vector specify requested GCMs set character. One , Monthly, Seasonal, Annual, combination thereof. Defaults \"\". only_extra logical. Tmin, Tmax PPT excluded? Defaults FALSE.","code":""},{"path":"https://bcgov.github.io/climr/reference/data-option-lists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List available runs, global circulation models, periods and climate scenarios — list_gcms","text":"character vector.","code":""},{"path":"https://bcgov.github.io/climr/reference/data-option-lists.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List available runs, global circulation models, periods and climate scenarios — list_gcms","text":"Currently available normals (list_refmaps()) : \"refmap_climatena\" Climate NA derived normals \"refmap_prism\" British Columbia PRISM climatologies derived normals \"refmap_climr\" composite BC PRISM, adjusted US PRISM DAYMET (Alberta Saskatchewan), covering western Canada western US.","code":""},{"path":"https://bcgov.github.io/climr/reference/data_connect.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to PostGIS database — data_connect","title":"Connect to PostGIS database — data_connect","text":"Connect PostGIS database","code":""},{"path":"https://bcgov.github.io/climr/reference/data_connect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to PostGIS database — data_connect","text":"","code":"data_connect()"},{"path":"https://bcgov.github.io/climr/reference/data_connect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to PostGIS database — data_connect","text":"pool object database connection","code":""},{"path":"https://bcgov.github.io/climr/reference/dem_vancouver.html","id":null,"dir":"Reference","previous_headings":"","what":"Example DEM — dem_vancouver","title":"Example DEM — dem_vancouver","text":"Digital elevation model North Vancouver, BC, Canada. use data set, need terra::unwrap first, e.g.: dem_vancouver <- terra::unwrap(get(data(dem_vancouver)))","code":""},{"path":"https://bcgov.github.io/climr/reference/dem_vancouver.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example DEM — dem_vancouver","text":"","code":"dem_vancouver"},{"path":"https://bcgov.github.io/climr/reference/dem_vancouver.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example DEM — dem_vancouver","text":"PackedSpatRaster","code":""},{"path":"https://bcgov.github.io/climr/reference/dem_vancouver.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example DEM — dem_vancouver","text":"todo add/describe source","code":""},{"path":"https://bcgov.github.io/climr/reference/dem_vancouver_lowres.html","id":null,"dir":"Reference","previous_headings":"","what":"Example low resolution DEM — dem_vancouver_lowres","title":"Example low resolution DEM — dem_vancouver_lowres","text":"lower resolution version dem_vancouver, re-projected 0.005 degrees. use data set, need terra::unwrap first, e.g.: dem_vancouver_lowres <- terra::unwrap(get(data(dem_vancouver_lowres)))","code":""},{"path":"https://bcgov.github.io/climr/reference/dem_vancouver_lowres.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example low resolution DEM — dem_vancouver_lowres","text":"","code":"dem_vancouver_lowres"},{"path":"https://bcgov.github.io/climr/reference/dem_vancouver_lowres.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example low resolution DEM — dem_vancouver_lowres","text":"PackedSpatRaster","code":""},{"path":"https://bcgov.github.io/climr/reference/dem_vancouver_lowres.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example low resolution DEM — dem_vancouver_lowres","text":"todo add/describe source","code":""},{"path":"https://bcgov.github.io/climr/reference/downscale.html","id":null,"dir":"Reference","previous_headings":"","what":"Self-contained change-factor downscaling of observed and simulated climate data — downscale","title":"Self-contained change-factor downscaling of observed and simulated climate data — downscale","text":"downscale() provides downscaled climate variables user-specified locations. adapts simple change-factor (aka \"delta') downscaling approach originally implemented ClimateNA. approach downscales climate data three stages: Change-factor downscaling coarse-resolution (50-200km grid) monthly temperature precipitation data climate models observational sources high-resolution (800m grid); Elevation adjustment temperature variables provide scales finer high-resolution reference grid; Calculating derived variables downscaled monthly temperature precipitation variables. See vignette(\"methods_downscaling\") description downscaling methodology. downscale() user-friendly wrapper downscale_core()","code":""},{"path":"https://bcgov.github.io/climr/reference/downscale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Self-contained change-factor downscaling of observed and simulated climate data — downscale","text":"","code":"downscale(   xyz,   which_refmap = \"auto\",   obs_periods = NULL,   obs_years = NULL,   obs_ts_dataset = NULL,   gcms = NULL,   ssps = NULL,   gcm_periods = NULL,   gcm_ssp_years = NULL,   gcm_hist_years = NULL,   max_run = 0L,   cache = TRUE,   ... )"},{"path":"https://bcgov.github.io/climr/reference/downscale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Self-contained change-factor downscaling of observed and simulated climate data — downscale","text":"xyz data.frame following columns \"long\", \"lat\", \"elev\", unique \"id\". extra columns ignored output. which_refmap character. map 1961-1990 climatological normals use high-resolution reference climate map downscaling. Default \"auto\", selects, query point, best available climatological normals map declining order \"refmap_prism\", \"refmap_climr\", \"refmap_climatena\". options one list_refmaps(), provide consistent reference map points. obs_periods character. historical period observational climate data, averaged period. Options list_obs_periods(). Default NULL obs_years integer. Vector years obtain individual years time series observational climate data. Default NULL. See list_obs_years() available years. obs_ts_dataset character. dataset use observational time series data. Options \"climatena\" ClimateNA gridded time series \"cru.gpcc\" combined Climatic Research Unit TS dataset (temperature) Global Precipitation Climatology Centre dataset (precipitation). Defaults NULL. gcms character. Vector global climate model names. Options list_gcms(). Defaults NULL. ssps character. Vector SSP-RCP scenarios (representative concentration pathways paired shared socioeconomic pathways). Options list_ssps(). Defaults scenarios available. gcm_periods character. 20-year reference periods GCM simulations. Options list_gcm_periods(). Defaults NULL. gcm_ssp_years character. Timeseries years GCM simulations future scenarios specified ssps. See list_gcm_ssp_years() available years. Defaults NULL. gcm_hist_years character.  Timeseries years GCM simulations historical scenario. See list_gcm_hist_years() available years. Defaults NULL. max_run integer. Maximum number model runs include. value 0 returns ensembleMean . Runs included order found models data max_run reached. Defaults 0L. cache logical. Cache data locally? Default TRUE ... arguments passed downscale_core(). Namely: return_refperiod, vars, out_spatial plot","code":""},{"path":"https://bcgov.github.io/climr/reference/downscale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Self-contained change-factor downscaling of observed and simulated climate data — downscale","text":"data.table downscaled climate variables location. outputs returned one table.","code":""},{"path":"https://bcgov.github.io/climr/reference/downscale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Self-contained change-factor downscaling of observed and simulated climate data — downscale","text":"downscale_core() parameters can applied downscale(). example, setting ppt_lr = TRUE downscale() apply elevation adjustment precipitation values. Although which_refmap = \"auto\" default, users cautioned can produce artefacts associated downscaling different reference climate maps within outside western North American boundary refmap_climr. recommend queries spanning boundary use which_refmap = \"refmap_climatena\".","code":""},{"path":"https://bcgov.github.io/climr/reference/downscale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Self-contained change-factor downscaling of observed and simulated climate data — downscale","text":"","code":"## provide or create a dataframe of lon, lat, elev, and id - usually read from csv file in_xyz <- data.frame(   lon = c(-127.7052, -127.6227, -127.5623, -127.7162, -127.1858, -127.125, -126.9495, -126.9550),   lat = c(55.3557, 55.38847, 55.28537, 55.25721, 54.88135, 54.65636, 54.6913, 54.61025),   elev = c(291, 296, 626, 377, 424, 591, 723, 633),   id = 1:8 )  ## historic observational time series vars <- c(\"PPT\", \"CMD\", \"Tave_07\") climate_norms_hist <- downscale(   xyz = in_xyz,    which_refmap = \"auto\",   return_refperiod = TRUE,   obs_periods = \"2001_2020\",   vars = vars,   out_spatial = TRUE, plot = \"PPT\" ) ## specify desired variables to plot #> Welcome to climr! #> 'gcms' is missing. 'max_run' will be ignored #> Getting normals... #> Downloading new data... #> . #> Caching data... #> Getting observed anomalies... #> Downloading observed period anomalies #> . #> Caching data... #> Downscaling!! #> Plotting results for a single period/GCM/run/SSP   ## as a data.table climate_norms_hist <- downscale(   xyz = in_xyz, which_refmap = \"auto\",   return_refperiod = TRUE,   vars = vars,   out_spatial = FALSE, plot = \"PPT\" ) ## specify desired variables to plot #> Welcome to climr! #> 'gcms' is missing. 'max_run' will be ignored #> Getting normals... #> Retrieving from cache... #> Downscaling!! #> Warning: 'gcms', 'gcm_ssp_ts', 'gcm_hist_ts', 'obs' and 'obs_ts' are missing. Nothing to downscale.  ## future projections for annual variables from three models climate_norms_fut <- downscale(   xyz = in_xyz, which_refmap = \"auto\",   gcms = list_gcms()[c(1,5,6)],   ssps = list_ssps()[2],   gcm_periods = list_gcm_periods()[1:2],   # gcm_ssp_years = 2020:2060,   max_run = 3, #' we want 3 individual runs for the model   vars = list_vars(\"Annual\") ) #> Welcome to climr! #> Getting normals... #> Retrieving from cache... #> Getting GCMs... #> Downloading GCM anomalies #> . #> Caching data... #> Downloading GCM anomalies #> . #> Caching data... #> Downloading GCM anomalies #> . #> Caching data... #> Downscaling!!"},{"path":"https://bcgov.github.io/climr/reference/downscale_core.html","id":null,"dir":"Reference","previous_headings":"","what":"Change-factor downscaling of user-supplied climate data — downscale_core","title":"Change-factor downscaling of user-supplied climate data — downscale_core","text":"downscale_core() engine downscale(). takes user-supplied high- low-resolution rasters input downscales user-specified point locations. less user-friendly downscale(), downscale_core() flexible users can supply raster inputs. example, user supply high-resolution climate map, instead available climr, input refmap. Another example downscaling uniform warming level, shown example function.","code":""},{"path":"https://bcgov.github.io/climr/reference/downscale_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change-factor downscaling of user-supplied climate data — downscale_core","text":"","code":"downscale_core(   xyz,   refmap,   gcms = NULL,   obs = NULL,   gcm_ssp_ts = NULL,   gcm_hist_ts = NULL,   obs_ts = NULL,   return_refperiod = TRUE,   vars = sort(sprintf(c(\"PPT_%02d\", \"Tmax_%02d\", \"Tmin_%02d\"), sort(rep(1:12, 3)))),   ppt_lr = FALSE,   nthread = 1L,   out_spatial = FALSE,   plot = NULL )"},{"path":"https://bcgov.github.io/climr/reference/downscale_core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change-factor downscaling of user-supplied climate data — downscale_core","text":"xyz data.frame following columns \"long\", \"lat\", \"elev\", unique \"id\". extra columns ignored output. refmap SpatRaster. Outputs input_refmap(). high-resolution climate maps use downscaling baseline. gcms list SpatRasters. Outputs input_gcms(). Global climate model data 20-year reference periods downscaled. Default NULL. obs list SpatRasters. Outputs input_obs(). Observed climate data 20-year reference periods downscaled. Default NULL. gcm_ssp_ts list SpatRasters. Outputs input_gcm_ssp(). Global climate model time series ssps-rcp scenarios downscaled. Default NULL. gcm_hist_ts list SpatRasters. Outputs input_gcm_hist(). Global climate model time series historical scenario downscaled. Default NULL. obs_ts list SpatRasters. Outputs input_obs_ts(). Observed climate time series downscaled. Default NULL. return_refperiod logical. Return downscaled reference period (1961-1990)? Default TRUE. vars character. vector climate variables compute. Supported variables can obtained list_vars(). Definitions can found package variables dataset. Default monthly PPT, Tmax, Tmin. ppt_lr logical. Apply elevation adjustment precipitation. Default FALSE. nthread integer. Number parallel threads use computations. Default 1L. out_spatial logical. SpatVector returned instead data.frame. plot character. out_spatial TRUE, name variable plot. variable exists reference, reference values also plotted. Otherwise, reference January total precipitation (PPT01) values plotted. Defaults plotting (NULL).","code":""},{"path":"https://bcgov.github.io/climr/reference/downscale_core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change-factor downscaling of user-supplied climate data — downscale_core","text":"data.table SpatVector downscaled climate variables. gcms NULL, just downscaled reference point locations. gcms provided, returns downscaled dataset point location, general circulation model (GCM), shared socioeconomic pathway (SSP), run period.","code":""},{"path":"https://bcgov.github.io/climr/reference/downscale_core.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Change-factor downscaling of user-supplied climate data — downscale_core","text":"recommend downscale() purposes.","code":""},{"path":[]},{"path":"https://bcgov.github.io/climr/reference/downscale_core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change-factor downscaling of user-supplied climate data — downscale_core","text":"","code":"##  library(terra) #> terra 1.7.78 xyz <- data.frame(lon = runif(10, -130, -106), lat = runif(10, 37, 50), elev = runif(10), id = 1:10)  ## get bounding box based on input points thebb <- get_bb(xyz)  ## get database connection dbCon <- data_connect()  # obtain the climatena 1961-1990 normals for the study area.  refmap <- input_refmap(dbCon, thebb, reference = \"refmap_climatena\") #> Downloading new data... #> ............ #> Caching data...  # obtain the low-resolution climate data for a single gcm, 20-year period, and ssp scenario.  gcm_raw <- input_gcms(dbCon, thebb, list_gcms()[3], list_ssps()[1], period = list_gcm_periods()[2]) #> Downloading GCM anomalies #> . #> Caching data...  # downscale the GCM data gcm_downscaled <- downscale_core(xyz = xyz, refmap = refmap, gcms = gcm_raw, vars = c(\"MAT\", \"PAS\"))  # create an input of uniform warming of 2 degrees Celsius and no precipitation change, for use as a null comparison to the GCM warming null <- gcm_raw #' use the gcm input object as a template names(null) <- \"null_2C\" names(null[[1]]) <-  sapply(strsplit(names(null[[1]]), \"_\"), function(x) paste(\"null2C\", x[2], x[3], \"NA\", \"NA\", \"NA\", \"NA\", sep=\"_\")) for(var in names(null[[1]])){ values(null[[1]][[var]]) <- if(length(grep(\"PPT\", var)==1)) 1 else 2 } #' repopulate with the null values  # downscale the null values for variables of interest null_downscaled <- downscale_core(xyz = xyz, refmap = refmap, gcms = null, vars = c(\"MAT\", \"PAS\")) pool::poolClose(dbCon)"},{"path":"https://bcgov.github.io/climr/reference/gcms-input-data.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve global climate model anomalies for downscale_core. — input_gcms","title":"Retrieve global climate model anomalies for downscale_core. — input_gcms","text":"input_gcms retrieves anomalies 20-year periods selected GCMs, SSPs, periods runs. input_gcm_hist creates GCM time series inputs historical scenario (1850-2014), given chosen GCMs, years runs. input_gcm_ssp creates future GCM time series inputs, given chosen GCMs, SSPs, years runs.","code":""},{"path":"https://bcgov.github.io/climr/reference/gcms-input-data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve global climate model anomalies for downscale_core. — input_gcms","text":"","code":"input_gcms(   dbCon,   bbox = NULL,   gcms = list_gcms(),   ssps = list_ssps(),   period = list_gcm_periods(),   max_run = 0L,   cache = TRUE )  input_gcm_hist(   dbCon,   bbox = NULL,   gcms = list_gcms(),   years = 1901:2014,   max_run = 0L,   cache = TRUE )  input_gcm_ssp(   dbCon,   bbox = NULL,   gcms = list_gcms(),   ssps = list_ssps(),   years = 2020:2030,   max_run = 0L,   cache = TRUE )"},{"path":"https://bcgov.github.io/climr/reference/gcms-input-data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve global climate model anomalies for downscale_core. — input_gcms","text":"dbCon db connection object created data_connect. bbox numeric. Vector length 4 giving bounding box study region, order ymax,ymin,xmax,xmin. general created get_bb(), can also user-defined. gcms character. Vector labels global circulation models use. Can obtained list_gcms(). Default GCMs available. ssps character. Vector SSP-RCP scenarios (representative concentration pathways paired shared socioeconomic pathways). Options list_ssps(). Defaults scenarios available. period character. Vector labels periods use. Can obtained list_gcm_periods(). Defaults periods available. max_run integer. Maximum number model runs include. value 0 returns ensembleMean . Runs included order found models data max_run reached. Defaults 0L. cache logical. Specifying whether cache new data locally . Defaults TRUE. years Numeric character vector 2020:2100. Defaults 2020:2030. See list_gcm_ssp_years() available years.","code":""},{"path":"https://bcgov.github.io/climr/reference/gcms-input-data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve global climate model anomalies for downscale_core. — input_gcms","text":"list SpatRasters, possibly multiple layers, can used downscale_core(). list SpatRasters, possibly multiple layers, can used downscale_core(). list SpatRasters, possibly multiple layers, can used downscale_core().","code":""},{"path":"https://bcgov.github.io/climr/reference/gcms-input-data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve global climate model anomalies for downscale_core. — input_gcms","text":"function returns list one slot requested GCM. Rasters inside list contain anomalies requested SSPs, runs, periods. general function used combination downscale_core(). function returns list one slot requested GCM. Rasters inside list contain anomalies runs years. general function used combination downscale_core(). function returns list one slot requested GCM. Rasters inside list contain anomalies SSPs, runs years. general function used combination downscale_core(). Note request multiple runs, multiple SSPs, lot years, take download data (lot ).","code":""},{"path":[]},{"path":"https://bcgov.github.io/climr/reference/gcms-input-data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve global climate model anomalies for downscale_core. — input_gcms","text":"","code":"library(terra) xyz <- data.frame(lon = runif(10, -140, -106), lat = runif(10, 37, 61), elev = runif(10), id = 1:10)  ## get bounding box based on input points thebb <- get_bb(xyz)  ## get database connection dbCon <- data_connect()  gcms <- input_gcms(dbCon, thebb, list_gcms()[1], list_ssps()[1]) #> Not fully cached :( Will download more #> Downloading GCM anomalies #> . #> Caching data...  ## show ensemble means only lyrs <- grep(\"ensemble\", names(gcms$`ACCESS-ESM1-5`))  plot(gcms$`ACCESS-ESM1-5`[[lyrs]])  pool::poolClose(dbCon)"},{"path":"https://bcgov.github.io/climr/reference/get_bb.html","id":null,"dir":"Reference","previous_headings":"","what":"Find bounding box of data — get_bb","title":"Find bounding box of data — get_bb","text":"Find bounding box data","code":""},{"path":"https://bcgov.github.io/climr/reference/get_bb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find bounding box of data — get_bb","text":"","code":"get_bb(in_xyz)"},{"path":"https://bcgov.github.io/climr/reference/get_bb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find bounding box of data — get_bb","text":"in_xyz data.table (data.frame) points downscale columns \"lon\", \"lat\", \"elev\" \"id\"","code":""},{"path":"https://bcgov.github.io/climr/reference/get_bb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find bounding box of data — get_bb","text":"numeric vector. Bounding box coordinates order ymax,ymin,xmax,xmin (e.g. c(51, 50, -121, -122)).","code":""},{"path":"https://bcgov.github.io/climr/reference/hist-input-data.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve observational anomalies. — input_obs","title":"Retrieve observational anomalies. — input_obs","text":"input_obs produces anomalies average observed climate given period, relative 1961-1990 reference period. anomalies calculated \"cru.gpcc\" dataset Climatic Research Unit TS dataset (temperature) Global Precipitation Climatology Centre dataset (precipitation). input_obs_ts produces anomalies observed climate given time series individual years.","code":""},{"path":"https://bcgov.github.io/climr/reference/hist-input-data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve observational anomalies. — input_obs","text":"","code":"input_obs(dbCon, bbox = NULL, period = list_obs_periods(), cache = TRUE)  input_obs_ts(   dbCon,   dataset = c(\"cru.gpcc\", \"climatena\"),   bbox = NULL,   years = 2010:2022,   cache = TRUE )"},{"path":"https://bcgov.github.io/climr/reference/hist-input-data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve observational anomalies. — input_obs","text":"dbCon db connection object created data_connect. bbox numeric. Vector length 4 giving bounding box study region, order ymax,ymin,xmax,xmin. general created get_bb(), can also user-defined. period character. Vector labels periods use. Can obtained list_obs_periods(). Default \"2001_2020\". cache logical. Specifying whether cache new data locally . Defaults TRUE. dataset Character. observational dataset use? Options \"climatena\" ClimateNA gridded time series \"cru.gpcc\" combined Climatic Research Unit TS dataset (temperature) Global Precipitation Climatology Centre dataset (precipitation). years numeric. Years retrieve obs anomalies . Defaults 2010:2022. See list_obs_years() available years.","code":""},{"path":"https://bcgov.github.io/climr/reference/hist-input-data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve observational anomalies. — input_obs","text":"list SpatRasters, possibly multiple layers, can used downscale_core(). element list corresponds particular period, values SpatRaster anomalies obs period compare reference period. List length 1 containing SpatRaster","code":""},{"path":"https://bcgov.github.io/climr/reference/hist-input-data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve observational anomalies. — input_obs","text":"Generally, function used combination downscale_core() values returned rasters anomalies compared 1961-1990 reference period, usually meaningful without whole downscale process. returned raster contains anomalies year specified years. general function used conjunction downscale_core().","code":""},{"path":[]},{"path":"https://bcgov.github.io/climr/reference/input_refmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve reference period climate maps — input_refmap","title":"Retrieve reference period climate maps — input_refmap","text":"function downloads (retrieves cache) monthly Tmin, Tmax, PPT climatologies (maps long-term average climate) specified data source specified bounding box. intended use downscale_core(), can also used stand-alone raster data.","code":""},{"path":"https://bcgov.github.io/climr/reference/input_refmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve reference period climate maps — input_refmap","text":"","code":"input_refmap(dbCon, bbox, reference = \"refmap_climatena\", cache = TRUE)"},{"path":"https://bcgov.github.io/climr/reference/input_refmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve reference period climate maps — input_refmap","text":"dbCon db connection object created data_connect. bbox numeric. Vector length 4 giving bounding box study region, order ymax,ymin,xmax,xmin. general created get_bb(), can also user-defined. reference character SpatRaster. character, label normal baseline use. Can obtained list_refmaps(). SpatRaster, 36 layers normal climate variables names PPT01:PPT12, Tmax01:Tmax12 Tmin01:Tmin12. Defaults list_refmaps()[1]. cache logical. Specifying whether cache new data locally . Defaults TRUE.","code":""},{"path":"https://bcgov.github.io/climr/reference/input_refmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve reference period climate maps — input_refmap","text":"SpatRaster containing reference period climatologies, lapse rates digital elevation model layers, can used downscale_core().","code":""},{"path":"https://bcgov.github.io/climr/reference/input_refmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve reference period climate maps — input_refmap","text":"first 36 layers output raster correspond actual climate variables. raster also contains lapse rates variable, corresponding digital elevation model.","code":""},{"path":[]},{"path":"https://bcgov.github.io/climr/reference/lapse_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of gridded lapse rates — lapse_rate","title":"Calculation of gridded lapse rates — lapse_rate","text":"function computes lapse rates (linear relationship climate variable elevation) across user-provided rasters. Lapse rates calculated using simple linear regression (without intercept) using focal cell eight neighbors observations. gridded lapse rates used downscale() downscale_core() elevation adjustment climate values downscaling user-specified locations. method illustrated vignette vignette(\"lapse_rates\")","code":""},{"path":"https://bcgov.github.io/climr/reference/lapse_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of gridded lapse rates — lapse_rate","text":"","code":"lapse_rate(reference, dem, NA_replace = TRUE, nthread = 1L, rasterize = TRUE)"},{"path":"https://bcgov.github.io/climr/reference/lapse_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of gridded lapse rates — lapse_rate","text":"reference SpatRaster stack. climate rasters compute lapse rates . Build package functions. dem SpatRaster. digital elevation model raster. needed normal SpatRaster. Defaults NULL. NA_replace logical. NA lapse rate results replaced zeros. Default TRUE. nthread integer. Number parallel threads use compute lapse rates. rasterize logical. Return object class category reference extent? Default TRUE.","code":""},{"path":"https://bcgov.github.io/climr/reference/lapse_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of gridded lapse rates — lapse_rate","text":"SpatRaster lapse rate values.","code":""},{"path":"https://bcgov.github.io/climr/reference/lapse_rate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculation of gridded lapse rates — lapse_rate","text":"Formulas  beta_coef = sum(xy) / sum(x²)  mss = sum(x * beta_coef)², sum squared fitted values  rss = sum(ε²), sum squared (y minus fitted), sum absolute errors  R² = mss / (mss + rss)  Lapse rate = beta_coef * R²","code":""},{"path":"https://bcgov.github.io/climr/reference/name_changes.html","id":null,"dir":"Reference","previous_headings":"","what":"Changes to naming conventions applied in Version 0.1.0 — name_changes","title":"Changes to naming conventions applied in Version 0.1.0 — name_changes","text":"table correspondence old new names functions, parameters, options. changes climate variable names, see data(variables).","code":""},{"path":"https://bcgov.github.io/climr/reference/name_changes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Changes to naming conventions applied in Version 0.1.0 — name_changes","text":"","code":"name_changes"},{"path":"https://bcgov.github.io/climr/reference/name_changes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Changes to naming conventions applied in Version 0.1.0 — name_changes","text":"data.table columns: type type object renamed function function whose contents renamed, applicable name_old old name, pre-v0.1.0 name_new new name, v0.1.0","code":""},{"path":"https://bcgov.github.io/climr/reference/pgGetTerra.html","id":null,"dir":"Reference","previous_headings":"","what":"Download raster with bounding box from PostGIS — pgGetTerra","title":"Download raster with bounding box from PostGIS — pgGetTerra","text":"Download raster bounding box PostGIS","code":""},{"path":"https://bcgov.github.io/climr/reference/pgGetTerra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download raster with bounding box from PostGIS — pgGetTerra","text":"","code":"pgGetTerra(conn, name, tile, rast = \"rast\", bands = 37:73, boundary)"},{"path":"https://bcgov.github.io/climr/reference/pgGetTerra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download raster with bounding box from PostGIS — pgGetTerra","text":"conn DBI RPostgres connection object. name character. Table name database. tile Logical. Retrieve data tiles avoid overloading database? rast character. Name column stores raster data. Defaults \"rast\" bands numeric. raster bands return. Default 37:73. boundary numeric. Vector length 4 (ymax,ymin,xmax,xmin). Defaults NULL.","code":""},{"path":"https://bcgov.github.io/climr/reference/pgGetTerra.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download raster with bounding box from PostGIS — pgGetTerra","text":"SpatRaster","code":""},{"path":"https://bcgov.github.io/climr/reference/plot_bivariate.html","id":null,"dir":"Reference","previous_headings":"","what":"Bivariate climate change plots — plot_bivariate","title":"Bivariate climate change plots — plot_bivariate","text":"Bivariate plots 21st century climate change user-selected locations climate variables. purposes plot : show differences climate change trends among global climate models (GCMs); show differences multiple simulations model; compare simulated climate change observed climate change 2001-2020 period. climate changes relative 1961-1990 reference period normals.","code":""},{"path":"https://bcgov.github.io/climr/reference/plot_bivariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bivariate climate change plots — plot_bivariate","text":"","code":"plot_bivariate(   xyz,   xvar = \"Tave_sm\",   yvar = \"PPT_sm\",   period_focal = list_gcm_periods()[1],   gcms = list_gcms()[c(1, 4, 5, 6, 7, 10, 11, 12)],   ssp = list_ssps()[2],   obs_period = list_obs_periods()[1],   gcm_periods = list_gcm_periods(),   max_run = 10,   legend_pos = \"bottomleft\",   show_runs = TRUE,   show_ensMean = TRUE,   show_observed = TRUE,   show_trajectories = TRUE,   interactive = FALSE,   cache = TRUE )"},{"path":"https://bcgov.github.io/climr/reference/plot_bivariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bivariate climate change plots — plot_bivariate","text":"xyz data.frame following columns \"long\", \"lat\", \"elev\", unique \"id\". extra columns ignored output. xvar character. x-axis variable. options list_vars(). yvar character. y-axis variable. options list_vars(). period_focal character. 20-year period plot ensemble detail. options list_gcm_periods(). gcms character. Vector global climate model names. Options list_gcms(). Defaults NULL. ssp character. single SSP-RCP scenario (representative concentration pathways paired shared socioeconomic pathways). Options list_ssps(). Defaults SSP2-4.5. obs_period character. single 20-year period observed climate data. Options list_obs_periods(). gcm_periods character. 20-year reference periods GCM simulations. Options list_gcm_periods(). Defaults NULL. max_run integer. Maximum number model runs include. value 0 returns ensembleMean . Runs included order found models data max_run reached. Defaults 0L. legend_pos character. Position legend. Options c(\"bottomright\", \"bottom\", \"bottomleft\", \"left\", \"topleft\", \"top\", \"topright\", \"right\", \"center\"). show_runs logical. TRUE, individual runs model plotted (period_focal ) addition single-model ensemble mean. show_ensMean logical. TRUE, multi-model ensemble mean plotted (period_focal ). show_observed logical. TRUE, 2001-2020 observed climate plotted. show_trajectories logical. TRUE, values single-model ensemble mean plotted 20-year periods list_gcm_periods(), connected interpolation spline. interactive logical. TRUE, interactive plot generated using {plotly}. FALSE, plot generated using base graphics. cache logical. Cache data locally? Default TRUE","code":""},{"path":"https://bcgov.github.io/climr/reference/plot_bivariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bivariate climate change plots — plot_bivariate","text":"NULL. Draws plot active graphics device.","code":""},{"path":"https://bcgov.github.io/climr/reference/plot_bivariate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bivariate climate change plots — plot_bivariate","text":"input table xyz can single location multiple locations. multiple locations, plot provides mean anomalies locations. climate change trajectories provided show_trajectories points five 20-year periods specified list_gcm_periods(). points connected interpolation spline x variable monotonic; otherwise trajectory points connected straight lines. plot designed used single SSP scenario. multiple scenarios passed plot, GCM means ensemble mean averaged across scenarios, individual runs scenarios plotted separately.","code":""},{"path":"https://bcgov.github.io/climr/reference/plot_bivariate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bivariate climate change plots — plot_bivariate","text":"","code":"# data frame of arbitrary points on Vancouver Island my_points <- data.frame(   lon = c(-123.4404, -123.5064, -124.2317),   lat = c(48.52631, 48.46807, 49.21999),   elev = c(52, 103, 357),   id = LETTERS[1:3] )  # draw the plot plot_bivariate(my_points) #> Welcome to climr! #> Getting normals... #> Not fully cached :( Will download more #> Downloading new data... #> . #> Caching data... #> Getting observed anomalies... #> Not fully cached :( Will download more #> Downloading observed period anomalies #> . #> Caching data... #> Getting GCMs... #> Not fully cached :( Will download more #> Downloading GCM anomalies #> Caching data... #> Downloading GCM anomalies #> . #> Caching data... #> Not fully cached :( Will download more #> Downloading GCM anomalies #> . #> Caching data... #> Not fully cached :( Will download more #> Downloading GCM anomalies #> . #> Caching data... #> Downloading GCM anomalies #> . #> Caching data... #> Downloading GCM anomalies #> . #> Caching data... #> Downloading GCM anomalies #> . #> Caching data... #> Downloading GCM anomalies #> . #> Caching data... #> Downscaling!!   # draw an interactive (plotly) plot if (interactive()) {   plot_bivariate(my_points, interactive = TRUE) }  # export plot to a temporary directory figDir <- tempdir() png(   filename = file.path(figDir, \"plot_test.png\"), type = \"cairo\", units = \"in\",   width = 6, height = 5, pointsize = 10, res = 300 ) plot_bivariate(my_points) #> Welcome to climr! #> Getting normals... #> Retrieving from cache... #> Getting observed anomalies... #> Retrieving from cache... #> Getting GCMs... #> Retrieving from cache... #> Retrieving from cache... #> Retrieving from cache... #> Retrieving from cache... #> Retrieving from cache... #> Retrieving from cache... #> Retrieving from cache... #> Retrieving from cache... #> Downscaling!! dev.off() #> agg_png  #>       2"},{"path":"https://bcgov.github.io/climr/reference/plot_timeSeries.html","id":null,"dir":"Reference","previous_headings":"","what":"Time series plots of climate change — plot_timeSeries","title":"Time series plots of climate change — plot_timeSeries","text":"Time series plots 20th 21st century climate change user-selected locations climate variables. purposes plot : view differences interannual variability climate change trends among global climate models (GCMs), view differences multiple simulations model, compare simulated observed climate change 1901 present, compare time series two different variables. global climate model anomalies bias-corrected 1961-1990 reference period normals.","code":""},{"path":"https://bcgov.github.io/climr/reference/plot_timeSeries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time series plots of climate change — plot_timeSeries","text":"","code":"plot_timeSeries(   X,   var1 = \"Tmin_sm\",   var2 = NULL,   showObserved = TRUE,   obs_ts_dataset = \"climatena\",   gcms = list_gcms()[c(1, 4, 5, 6, 7, 10, 11, 12)],   ssps = list_ssps()[1:3],   showrange = TRUE,   yfit = TRUE,   cex = 1,   mar = c(3, 3, 0.1, 4),   showmean = TRUE,   compile = TRUE,   simplify = TRUE,   refline = FALSE,   refline.obs = TRUE,   pal = \"scenario\",   label.endyear = FALSE,   endlabel = \"change\",   yearmarkers = TRUE,   yearlines = FALSE,   legend_pos = \"topleft\" )"},{"path":"https://bcgov.github.io/climr/reference/plot_timeSeries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time series plots of climate change — plot_timeSeries","text":"X data.table object produced using function plot_timeSeries_input(). table can include models, scenarios, variables used individual calls plot_timeSeries(). var1 character. climate var. options list_vars(). var2 character. second climate var plot combination var1. options list_vars(). showObserved logical. Plot time series observed climate. obs_ts_dataset character. dataset use observational time series data. Options \"climatena\" ClimateNA gridded time series \"cru.gpcc\" combined Climatic Research Unit TS dataset (temperature) Global Precipitation Climatology Centre dataset (precipitation). Defaults NULL. gcms character. Vector global climate model names. Options list_gcms(). Defaults NULL. ssps character. Vector SSP-RCP scenarios (representative concentration pathways paired shared socioeconomic pathways). Options list_ssps(). Defaults scenarios available. showrange logical. Plot shaded region indicating minimum maximum selected ensemble GCM simulations selected scenario. yfit logical. Set range y axis range visible data. FALSE y axis range values var1 (var2 applicable) input table defined X. cex Numeric. magnification factor text size. Default 1. mar numerical vector length 4, giving margin sizes number lines text: c(bottom, left, top, right). default c(3,3,0.1,4). showmean logical. Plot ensemble mean time series. Multi-model ensemble means calculated mean simulations model. compile logical. Compile multiple global climate models multi-model ensemble. FALSE single-model ensembles plotted individually. simplify logical. Simplify ensemble range mean using smoothing spline. refline logical. Plot 1961-1990 reference period mean selected var extend line year 2100 visual reference. refline.obs logical. Plot 1961-1990 reference period mean observational data. reference line GCM time series. pal character. color palette. Options \"scenario\", use comparing scenarios, \"gcms\", use comparing GCMs. label.endyear logical. Add label final year observational time series. endlabel character. Add label end simulated time series. Options \"change\", indicate change year 2100 relative 1961-1990 baseline, \"gcms\" indicate global climate model. yearmarkers logical. Add white points observational time series visual aid. yearlines logical. Add vertical lines every fifth year visual reference legend_pos character. Position legend. Viable options c(\"bottomright\", \"bottomleft\", \"topleft\", \"topright\").","code":""},{"path":"https://bcgov.github.io/climr/reference/plot_timeSeries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Time series plots of climate change — plot_timeSeries","text":"NULL. Draws plot active graphics device.","code":""},{"path":"https://bcgov.github.io/climr/reference/plot_timeSeries.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Time series plots of climate change — plot_timeSeries","text":"input table X provides climate data single location average multiple locations. purpose conducting generation input table separate function allow users make multiple calls plot_timeSeries() without needing generate inputs time. combinations var1 var2 compatible meaningful. Examples meaningful combinations winter vs summer values climate var minimum vs. maximum temperatures. Downloads GCM time series take long time. plot_timeSeries_input() function can take >1hr run first time called location. looking ways speed , recommend users dedicate time run function background. time series cached, need downloaded .","code":""},{"path":"https://bcgov.github.io/climr/reference/plot_timeSeries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time series plots of climate change — plot_timeSeries","text":"","code":"if(FALSE){ # data frame of arbitrary points my_points <- data.frame(lon = c(-127.7300,-127.7500), lat = c(55.34114, 55.25), elev = c(711, 500), id = 1:2)  # generate the input data my_data <- plot_timeSeries_input(my_points)  # use the input to create a plot plot_timeSeries(my_data, var1 = \"Tmin_sm\")  # compare observational time series plot_timeSeries(my_data, var1 = \"Tmin_sm\", obs_ts_dataset = c(\"cru.gpcc\", \"climatena\"))  # compare mean daily minimum and maximum temperatures plot_timeSeries(my_data, var1 = \"Tmin_sm\", var2 = \"Tmax_sm\")  # compare summer and winter temperatures (without simplifying the ensemble range) plot_timeSeries(my_data, var1 = \"Tmax_sm\", var2 = \"Tmax_wt\", simplify = FALSE)  # compare global climate models plot_timeSeries(my_data, gcms = list_gcms()[c(7,13)], pal = \"gcms\", ssps = list_ssps()[2], showmean = FALSE, compile = FALSE, simplify = FALSE, endlabel = \"gcms\", mar=c(3,3,0.1,6), showObserved = FALSE)  # export plot to a temporary directory, including a title figDir <- tempdir() png(   filename = file.path(figDir, \"plot_test.png\"), type = \"cairo\", units = \"in\",   width = 6, height = 5, pointsize = 10, res = 300 ) plot_timeSeries(my_data, var1 = \"Tmin_sm\", mar=c(3,3,2,4)) title(\"Historical and projected summer night-time warming in the Bulkley Valley, BC\") dev.off() }"},{"path":"https://bcgov.github.io/climr/reference/plot_timeSeries_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Input data for the time series climate change plot — plot_timeSeries_input","title":"Input data for the time series climate change plot — plot_timeSeries_input","text":"Input data plot_timeSeries() function. Since inputs time-consuming generate, purpose conducting generation input table separate function allow users make multiple calls plot_timeSeries() (e.g., comparing different climate variables) without needing generate inputs time.","code":""},{"path":"https://bcgov.github.io/climr/reference/plot_timeSeries_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Input data for the time series climate change plot — plot_timeSeries_input","text":"","code":"plot_timeSeries_input(   xyz,   gcms = list_gcms(),   ssps = list_ssps(),   max_run = 10,   obs_ts_dataset = c(\"cru.gpcc\", \"climatena\"),   obs_years = 1901:2022,   gcm_hist_years = 1850:2014,   gcm_ssp_years = 2015:2100,   vars = list_vars() )"},{"path":"https://bcgov.github.io/climr/reference/plot_timeSeries_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Input data for the time series climate change plot — plot_timeSeries_input","text":"xyz data.frame following columns \"long\", \"lat\", \"elev\", unique \"id\". extra columns ignored output. gcms character. Vector global climate model names. Options list_gcms(). Defaults NULL. ssps character. Vector SSP-RCP scenarios (representative concentration pathways paired shared socioeconomic pathways). Options list_ssps(). Defaults scenarios available. max_run integer. Maximum number model runs include. value 0 returns ensembleMean . Runs included order found models data max_run reached. Defaults 0L. obs_ts_dataset character. dataset use observational time series data. Options \"climatena\" ClimateNA gridded time series \"cru.gpcc\" combined Climatic Research Unit TS dataset (temperature) Global Precipitation Climatology Centre dataset (precipitation). Defaults NULL. obs_years integer. Vector years obtain individual years time series observational climate data. Default NULL. See list_obs_years() available years. gcm_hist_years character.  Timeseries years GCM simulations historical scenario. See list_gcm_hist_years() available years. Defaults NULL. gcm_ssp_years character. Timeseries years GCM simulations future scenarios specified ssps. See list_gcm_ssp_years() available years. Defaults NULL. vars character. vector climate variables compute. Supported variables can obtained list_vars(). Definitions can found package variables dataset. Default monthly PPT, Tmax, Tmin.","code":""},{"path":"https://bcgov.github.io/climr/reference/plot_timeSeries_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Input data for the time series climate change plot — plot_timeSeries_input","text":"data.table average downscaled climate variables locations.","code":""},{"path":"https://bcgov.github.io/climr/reference/plot_timeSeries_input.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Input data for the time series climate change plot — plot_timeSeries_input","text":"function generates standardized inputs one multiple locations spatial scale. multiple locations specified, output average climate variables locations. Downloads GCM time series take long time. plot_timeSeries_input() function can take >1hr run first time called location. looking ways speed , recommend users dedicate time run function background. time series cached, need downloaded .","code":""},{"path":"https://bcgov.github.io/climr/reference/plot_timeSeries_input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Input data for the time series climate change plot — plot_timeSeries_input","text":"","code":"if(FALSE){ # data frame of arbitrary points my_points <- data.frame(lon = c(-127.7300,-127.7500), lat = c(55.34114, 55.25), elev = c(711, 500), id = 1:2)  # generate the input data my_data <- plot_timeSeries_input(my_points)  # use the input to create a plot plot_timeSeries(my_data, variable1 = \"Tmin_sm\") } #'"},{"path":"https://bcgov.github.io/climr/reference/vancouver.html","id":null,"dir":"Reference","previous_headings":"","what":"Example line data — vancouver","title":"Example line data — vancouver","text":"Shapefile coast Vancouver, BC, Canada. Mostly used plotting. use data set, need terra::unwrap first, e.g.: vancouver <- terra::unwrap(get(data(vancouver)))","code":""},{"path":"https://bcgov.github.io/climr/reference/vancouver.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example line data — vancouver","text":"","code":"vancouver"},{"path":"https://bcgov.github.io/climr/reference/vancouver.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example line data — vancouver","text":"PackedSpatVector","code":""},{"path":"https://bcgov.github.io/climr/reference/vancouver.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example line data — vancouver","text":"todo add/describe source","code":""},{"path":"https://bcgov.github.io/climr/reference/vancouver_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Example point locations — vancouver_points","title":"Example point locations — vancouver_points","text":"Shapefile point locations North Vancouver, BC, Canada. use data set, need terra::unwrap first, e.g.: vancouver_points <- terra::unwrap(get(data(vancouver_points)))","code":""},{"path":"https://bcgov.github.io/climr/reference/vancouver_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example point locations — vancouver_points","text":"","code":"vancouver_points"},{"path":"https://bcgov.github.io/climr/reference/vancouver_points.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example point locations — vancouver_points","text":"PackedSpatVector","code":""},{"path":"https://bcgov.github.io/climr/reference/vancouver_points.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example point locations — vancouver_points","text":"derived dem_vancouver","code":""},{"path":"https://bcgov.github.io/climr/reference/vancouver_poly.html","id":null,"dir":"Reference","previous_headings":"","what":"Example polygon locations — vancouver_poly","title":"Example polygon locations — vancouver_poly","text":"Shapefile North Vancouver polygon format, BC, Canada. use data set, need terra::unwrap first, e.g.: vancouver_poly <- terra::unwrap(get(data(vancouver_poly)))","code":""},{"path":"https://bcgov.github.io/climr/reference/vancouver_poly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example polygon locations — vancouver_poly","text":"","code":"vancouver_poly"},{"path":"https://bcgov.github.io/climr/reference/vancouver_poly.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example polygon locations — vancouver_poly","text":"PackedSpatVector","code":""},{"path":"https://bcgov.github.io/climr/reference/vancouver_poly.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example polygon locations — vancouver_poly","text":"derived dem_vancouver","code":""},{"path":"https://bcgov.github.io/climr/reference/variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Available climate variables — variables","title":"Available climate variables — variables","text":"List available climate variables climr","code":""},{"path":"https://bcgov.github.io/climr/reference/variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available climate variables — variables","text":"","code":"variables"},{"path":"https://bcgov.github.io/climr/reference/variables.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Available climate variables — variables","text":"data.table columns: Code variable code name Variable variable description (full name) Code_Element code climate element (e.g. PPT) Element name climate element (e.g. precipitation) Code_Time code time year. Blank annual variables Time time year variable corresponds (e.g, summer, August) Category time resolution (e.g., annual, monthly, seasonal, etc.) Type type variable. Differentiates interval ratio variables Unit unit measurement. Blank functionally unitless variables unit contained variable name Code_ClimateNA variable code used ClimateNA","code":""},{"path":"https://bcgov.github.io/climr/reference/weather_stations.html","id":null,"dir":"Reference","previous_headings":"","what":"BC Weather Station Data - PCDS — weather_stations","title":"BC Weather Station Data - PCDS — weather_stations","text":"points shapefile weather stations BC Pacific Climate Impacts Consortium. Stations without elevation data excluded.","code":""},{"path":"https://bcgov.github.io/climr/reference/weather_stations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BC Weather Station Data - PCDS — weather_stations","text":"","code":"weather_stations"},{"path":"https://bcgov.github.io/climr/reference/weather_stations.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"BC Weather Station Data - PCDS — weather_stations","text":"PackedSpatVector","code":""},{"path":"https://bcgov.github.io/climr/reference/weather_stations.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"BC Weather Station Data - PCDS — weather_stations","text":"https://services.pacificclimate.org/met-data-portal-pcds/app/","code":""},{"path":"https://bcgov.github.io/climr/reference/weather_stations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"BC Weather Station Data - PCDS — weather_stations","text":"use data set, need terra::unwrap first, e.g.: weather_stations <- terra::unwrap(get(data(weather_stations)))","code":""},{"path":"https://bcgov.github.io/climr/reference/xyzDT.html","id":null,"dir":"Reference","previous_headings":"","what":"Example table of point locations — xyzDT","title":"Example table of point locations — xyzDT","text":"data.table point locations elevation. simplified cleaned-version weather_stations dataset, incomplete cases removed.","code":""},{"path":"https://bcgov.github.io/climr/reference/xyzDT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example table of point locations — xyzDT","text":"","code":"xyzDT"},{"path":"https://bcgov.github.io/climr/reference/xyzDT.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example table of point locations — xyzDT","text":"data.table","code":""},{"path":"https://bcgov.github.io/climr/reference/xyzDT.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example table of point locations — xyzDT","text":"https://services.pacificclimate.org/met-data-portal-pcds/app/","code":""},{"path":[]},{"path":"https://bcgov.github.io/climr/news/index.html","id":"implementation-of-naming-conventions-0-1-0","dir":"Changelog","previous_headings":"","what":"Implementation of naming conventions","title":"climr 0.1.0","text":"overhauled naming functions, parameters, options make intuitive internally consistent. need revise climr code workflows accommodate changes. table correspondence specifying changes located ./data-raw/namingChanges.csv viewable calling data(name_changes). changed climate variable naming convention climate element time year always separated underscore. e.g., Tmin01 becomes Tmin_01; DD_0_01 becomes DDsub0_01. variables table called data(variables) now field “Code_ClimateNA” variable codes used ClimateBC/NA allow users crosswalk two conventions.","code":""},{"path":"https://bcgov.github.io/climr/news/index.html","id":"user-actions-required-0-1-0","dir":"Changelog","previous_headings":"","what":"User Actions Required","title":"climr 0.1.0","text":"implement new version, users must clear cache climate data running following line code: cache_clear(). best avoid need wholesale cache-clearing future.","code":""},{"path":"https://bcgov.github.io/climr/news/index.html","id":"bug-fixes-0-1-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"climr 0.1.0","text":"Fixed error calculation Hogg’s climatic moisture index (CMI). error inherited unreported error Equation 3 Hogg (1997). Fixed error calculation precipitation snow. PAS parameters ClimateNA climr differ originally published Wang et al. (2016). fixed --bounds error affected user queries close coastline. Added missing future 2015-2100 time series GFDL-ESM4 climate model.","code":""},{"path":"https://bcgov.github.io/climr/news/index.html","id":"enhancements-0-1-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"climr 0.1.0","text":"Added plot_timeSeries() plot_timeSeries_input() functions generate plots 20th 21st century climate change user-selected locations climate variables. Added 1901-2022 observational time series combined Climatic Research Unit TS dataset (Temperature) Global Precipitation Climatology Centre dataset (precipitation). Extended ClimateNA observational time series 1901-2023. Added vignette (article) providing guidance climate model ensemble selection emissions scenario selection. Added vignette (article) methods used select 13 global climate models provided climr, 8-model ensemble recommended purposes.","code":""},{"path":"https://bcgov.github.io/climr/news/index.html","id":"known-issues-0-1-0","dir":"Changelog","previous_headings":"","what":"Known issues","title":"climr 0.1.0","text":"Downloads time series take long time. looking ways speed , recommend users dedicate time prior analysis cache time series interest areas interest batch. time series cached, don’t need downloaded . Related issue time series download speed, plot_timeSeries_input() function can take >1hr run first time called location.","code":""},{"path":[]},{"path":"https://bcgov.github.io/climr/news/index.html","id":"bug-fixes-0-0-4","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"climr 0.0.4","text":"Updated future timeseries data include full 2015-2100 period added missing models (built cool bash scrips using parallel quickly raster2pgsql conversion large numbers files). Updated historic modelled timeseries extend December 31, 2014. Restructured naming scheme timeseries data, updated internal dbnames table, updated postgresql functions allow hyphens table names. Reprocessed future GCM periods include North America. Fixed bug plot_bivariate() focal periods 2001-2020. Fixed caching issue fail larger numbers layers (>65000) saving .gri binary files.","code":""},{"path":"https://bcgov.github.io/climr/news/index.html","id":"enhancements-0-0-4","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"climr 0.0.4","text":"Added checks bounding box projection.","code":""},{"path":[]},{"path":"https://bcgov.github.io/climr/news/index.html","id":"enhancements-0-0-3","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"climr 0.0.3","text":"new tests comparing reference outputs code streamlined new messages warn user meaningless downscale/climr_downscale argument combinations argument options climr_downscale(..., which_normal) now match options normal_input(..., normal) add plot_bivariate() function generate plots showing climate model ensemble variation recent future climate change. new functions list_historic_ts list_gcm_ts get available years historic/future time series","code":""},{"path":"https://bcgov.github.io/climr/news/index.html","id":"behaviour-changes-0-0-3","dir":"Changelog","previous_headings":"","what":"Behaviour changes","title":"climr 0.0.3","text":"xyz (argument climr_downscale downscale) in_xyz (argument get_bb), must now 4 column data.table (coercible class) lon, lat, elev id columns. columns ignored returned. Column order longer matters.","code":""},{"path":"https://bcgov.github.io/climr/news/index.html","id":"bugfixes-0-0-3","dir":"Changelog","previous_headings":"","what":"Bugfixes","title":"climr 0.0.3","text":"cache fixes fixing geographical checks get highest resolution beyond BC, Canada fixing historic_input_ts get queried years get_bb follows column names","code":""},{"path":"https://bcgov.github.io/climr/news/index.html","id":"other-0-0-3","dir":"Changelog","previous_headings":"","what":"Other","title":"climr 0.0.3","text":"climr_downscale now accepts ... pass arguments downscale","code":""},{"path":[]},{"path":"https://bcgov.github.io/climr/news/index.html","id":"bugfixes-0-0-2","dir":"Changelog","previous_headings":"","what":"Bugfixes","title":"climr 0.0.2","text":"fixed temperature values composite anomalies name composite anomalies changed “normal_composite” normal_input(..., normal).","code":""},{"path":"https://bcgov.github.io/climr/news/index.html","id":"documentation-0-0-2","dir":"Changelog","previous_headings":"","what":"Documentation","title":"climr 0.0.2","text":"added vignettes pkgdown website climr live","code":""},{"path":[]},{"path":"https://bcgov.github.io/climr/news/index.html","id":"enhancements-0-0-1","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"climr 0.0.1","text":"continuous testing implemented via GitHub Actions code cleaned following tidyverse syntax recommendations internal function definitions now avoided improvements function documentation removal deprecated functions increased code coverage code streamlining added new composite climatologies Western Canada Western US.","code":""},{"path":"https://bcgov.github.io/climr/news/index.html","id":"bugfixes-0-0-1","dir":"Changelog","previous_headings":"","what":"Bugfixes","title":"climr 0.0.1","text":"fixed examples fixed incomplete changing package name (climRpnw climr) added missing pkg imports fixed caching problem cached objects retrieved PostGIS server unavailable fixed model names PostGIS server, fixed bugs gcm_hist_input gcm_ts_input.","code":""},{"path":"https://bcgov.github.io/climr/news/index.html","id":"dependency-changes-0-0-1","dir":"Changelog","previous_headings":"","what":"Dependency changes","title":"climr 0.0.1","text":"methods removed Imports sf added Imports","code":""},{"path":"https://bcgov.github.io/climr/news/index.html","id":"other-0-0-1","dir":"Changelog","previous_headings":"","what":"Other","title":"climr 0.0.1","text":"old data base access functions removed","code":""},{"path":"https://bcgov.github.io/climr/news/index.html","id":"climr-0009990","dir":"Changelog","previous_headings":"","what":"climr 0.0.0.9990","title":"climr 0.0.0.9990","text":"Beta-version","code":""}]
